{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/main.js","webpack://exports/./src/tree.js","webpack://exports/./src/utils.js","webpack://exports/./src/xml.js","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/settings\"","webpack://exports/external \"sketch/ui\""],"names":["onShowAboutDialog","context","iconPath","plugin","urlForResourceNamed","path","icon","NSImage","alloc","initByReferencingFile","dialog","NSAlert","init","setMessageText","setInformativeText","addButtonWithTitle","responseCode","runModal","NSAlertFirstButtonReturn","NSWorkspace","sharedWorkspace","openURL","NSURL","URLWithString","onOpenFileAndExportWholeAsXml","file","Document","require","filePath","String","fileName","substring","lastIndexOf","indexOf","replace","trim","fileDir","open","err","document","console","warn","exportWhole","getSelectedDocument","close","onExportLibraryAsXml","Tree","Xml","Utils","sketch","settings","UI","alert","chooseFolder","log","docPath","decodeURI","docPathElements","split","documentName","length","pascalize","libraryName","libraryFontsSubDir","libraryImagesSubDir","createDirectoryIfNeeded","forceNewDirectory","message","documentContext","initDocumentContext","xmlLibraryRoot","NSXMLElement","initWithName","xmlAddAttributesToElement","version","symbols","getSymbols","symbolsIDs","i","currentSymbol","name","startsWith","includes","id","push","indexedData","globalNamesIndex","actualName","getUniqueNameFromIndexedData","actualType","getTypeFromIndexedData","keyValues","getKeyValuesFromIndexedData","parentType","getParentTypeFromIndexedData","xmlComponent","xmlAddElement","frame","width","height","background","enabled","includedInInstance","getBackgroundColorAsHexValueOrSwatchReference","xmlAddCustomPropertiesToElement","addSymbolMasterOverridesToXml","treeIterateLayers","layers","addSharedTextStylesToXml","addFontFilesToXml","fontFiles","addColorVariablesToXml","clearTempContext","xmlFilePath","exportXMLToPath","playSoundNamed","Sounds","Glass","showInFinder","onExportApplicationAsXml","appName","appFontsSubDir","appImagesSubDir","xmlAppRoot","pages","page","xmlPage","artboards","j","artboardOrlayer","type","sketchObject","class","artboard","xmlScreen","includedInExport","exportDir","interactionsAllowed","maxNumberOfSteps","onExportWholeAsXml","onExportFonts","forEach","getFontFilesUsedByLayer","fontFile","copyFile","onExportSelectedLayersAsPNG","selectedLayers","NSBeep","layer","exportLayerAsPNG","onExportSelectedLayersAsSVG","exportLayerAsSVG","onExportSelectedLayersWithUserPredefinedExportOptions","exportLayerWithUserDefinedExportOptions","forbiddenNames","diacriticsMap","A","AE","E","I","O","OE","U","a","ae","c","e","o","oe","u","numberOfImagesPerLayerExport","maximumImageWidthOrHeight","GLOBALNAMESINDEX_UNIQUENAME","GLOBALNAMESINDEX_TYPE","GLOBALNAMESINDEX_KEYVALUES","GLOBALNAMESINDEX_RAWNAME","GLOBALNAMESINDEX_PARENTTYPE","TEMP_CONTEXT","data","getRawNameFromIndexedData","availableSwatchIDs","missingSwatches","sharedLayerStylesIndex","sharedTextStylesIndex","textsWithOutOfSyncStyle","sharedLayerStyles","style","sharedTextStyles","treePopulateGlobalNamesIndex","nb","Object","keys","usedNativeSwatches","documentData","allSwatches","nativeSwatch","objectID","addFontFileToContext","fontFilePath","result","layerFontFilePath","subLayer","symbolMaster","xmlRoot","overrides","overR","editable","property","overrideTargetPath","treeBuildOverrideTargetPath","parent","shallIgnoreSymbolMasters","rootDirPath","imagesSubDir","mask","actualParent","currentMask","l","isCustomClass","rawName","xmlCurrent","addCustomPropertiesToXml","text","_object","shouldBreakMaskChain","master","indexedDataSymbolMaster","symbolOverridesHash","isDefault","indexedDataOverride","affectedLayer","originalOverrideTargetPath","overrideValue","defaultValue","currentValue","overrideParent","prefix","dotIndex","hasOwnProperty","imgData","value","nsdata","imgName","NSString","stringWithFormat","imgRelativePath","writeToFile_atomically","currentOver","affectedLayerUsesAnOutOfSyncStyle","overrideStyle","styleFontFilePath","styleXML","treeAddAttributesFromLayerStyle","indexexDataOldSymbol","oldType","newType","newSymbol","getSymbolMasterWithID","indexedDataNewSymbol","hasClippingMask","shallBlockBecauseExportExists","treeAddAttributesFromLayerData","treeAddAttributesFromPointData","currentXMLElement","point","pointType","pointAttributes","x","y","cornerRadius","nativePoint","hasCurveFrom","curveFrom","hasCurveTo","curveTo","treeAddTextBehaviour","isTextLayer","layerTextBehaviour","treeAddAttributesFromTextStyle","layerOrSharedTextStyle","sharedTextStyle","isText","sharedStyle","attributes","opacity","blendingMode","textBehaviour","alignment","verticalAlignment","textColor","getTextColorAsHexValueOrSwatchReference","lineHeight","paragraphSpacing","needFontFamily","fontFamily","needFontSize","fontSize","needFontWeight","fontWeight","needFontStyle","fontStyle","needFontVariant","fontVariant","needFontStretch","fontStretch","needKerning","kerning","needTextTransform","textTransform","needTextUnderline","textUnderline","needTextStrikethrough","textStrikethrough","fontPostscriptNameFromStyle","fontStyleNameFromStyle","borderOptions","startArrowhead","endArrowhead","dashPatternLength","dashPattern","dashPatternString","join","lineEnd","lineJoin","fills","fill","xmlFill","fillAttributes","fillType","getFillColorAsHexValueOrSwatchReference","gradient","gradientType","from","to","aspectRatio","stops","stop","stopAttributes","position","rgbaToArgbOrRgb","color","pattern","patternType","tileScale","borders","border","xmlBorder","borderAttributes","thickness","locked","hidden","transform","rotation","flippedHorizontally","flippedVertically","hasFixedWidth","hasFixedHeight","hasFixedLeft","hasFixedTop","hasFixedRight","roundBy","hasFixedBottom","Math","ceil","flow","target","targetId","animationType","renderingAsImage","isSupportedLayer","treeForceImageExport","exportFormats","hasExports","canExportTypeAsImage","treeAddImageExport","sharedStyleId","isSharedStyleOutOfSync","shapeType","closed","points","escapeCharactersInUnicodePrivateUseArea","endsWith","exportPath","numberOfImages","layerWidth","layerHeight","currentAtN","insets","exportAttr","succeeded","format","exportFormat","MSExportFormat","exportableFilenameForLayerName_exportFormat","sizeText","size","fileFormat","suffix","treeAddLayerInGlobalNamesIndex","layerNamesUnicityByContext","layersStack","contextStack","elements","nameAndType","shift","useActualNameAsType","extractedTypeIsParentType","isLine","extractedType","match","toLowerCase","contextKey","localLayerNamesUnicityHash","counter","hashKey","camelize","lowerCaseFirstCharater","pop","layerId","unshift","rootKey","myId","getLayerWithID","elmts","index","str","xmlParent","fontsSubDir","excludeSystemFonts","fontFileNames","sort","validSwatchName","colorNames","validName","has","get","set","Map","swatchesData","swatch","fromNative","key","b","swatchData","styleNames","stylesData","textStyleData","sharedTextStyleXml","removeDiacritics","firstCharIsInvalid","p1","p2","offset","toUpperCase","capitalize","test","charAt","reduce","replaceRegexp","std","slice","charCodeAt","toString","textStyle","fontPostscriptName","fontDisplayName","NSFont","displayName","fontStyleName","mscolorToHexValueOrSwatchReference","MSAttributedStringColorAttribute","rgbaToArgb","backgroundColor","mscolor","swatchID","mscolorToArgbOrRgb","immutableModelObject","hexValue","round","alpha","textBehaviourValue","nsFont","urlAttribute","fontDescriptor","objectForKey","isLayerGroup","isKindOfClass","MSLayerGroup","MSShapeGroup","isBitmapLayer","MSBitmapLayer","MSTextLayer","isShapeLayer","MSRectangleShape","MSOvalShape","MSPolygonShape","MSStarShape","MSTriangleShape","MSShapePathLayer","isRectangleShape","isRectangle","isOvalShape","isSliceLayer","MSSliceLayer","isArtboard","MSArtboardGroup","isSymbolMaster","MSSymbolMaster","isSymbolInstance","MSSymbolInstance","isSupportedShapeStyle","isSupported","blur","shadows","filter","item","innerShadows","activeItems","numberOfActiveItems","lastItem","module","exports","Basso","Blow","Bottle","Frog","Funk","Hero","Morse","Ping","Pop","Purr","Sosumi","Submarine","Tink","sound","NSSound","soundNamed","play","panel","NSOpenPanel","openPanel","setCanChooseDirectories","setCanChooseFiles","setCanCreateDirectories","NSModalResponseOK","URL","showDialog","app","NSApplication","sharedApplication","displayDialog_withTitle","directoryPathOrFilePath","errorPointer","MOPointer","fileManager","NSFileManager","defaultManager","attributesOfItemAtPath_error","isDirectory","openFile_withApplication","selectFile_inFileViewerRootedAtPath","nil","runCommand","command","args","currentDirectoryPath","task","NSTask","setLaunchPath_","setCurrentDirectoryPath","arguments","launch","waitUntilExit","terminationStatus","source","destination","manager","fileExistsAtPath","copyItemAtPath_toPath_error","fileExists","expandTildeInPath","stringWithString","stringByExpandingTildeInPath","createDirectoryAtPath_withIntermediateDirectories_attributes_error","removeItemAtPath_error","roundWithDecimalPrecision","precision","multiplier","pow","rounder","exportLayerWithFormats","exportName","formats","preserveFrameSize","applyTransformAndOpacity","topInset","bottomInset","leftInset","rightInset","sketchDom","layerToExport","useDuplicate","isRotated","isFlippedHorizontally","isFlippedVertically","parentIsGroup","duplicate","selectedPage","point0","pt0X","pt0Y","point1","pt1X","pt1Y","angleInDegrees","atan2","PI","nativeLayer","absoluteRect","rect","absoluteInfluenceRect","exportRect","CGRectContainsRect","absoluteRectX","origin","absoluteRectY","absoluteRectWidth","absoluteRectHeight","sketchVersion","exportRequest","MSExportRequest","exportRequestsFromExportableLayer_exportFormats_inRect_useIDForName","firstObject","setShouldTrim","saveArtboardOrSlice_toFile","exportRequestFromExportFormat_layer_inRect_useIDForName","remove","maxAtN","max","pngFormat","setFileFormat","setScale","setName","svgFormat","el","elementWithName_stringValue","elementWithName","addAttribute","NSXMLNode","attributeWithName_stringValue","addChild","element","xmlElement","root","doc","NSXMLDocument","documentWithRootElement","xmlData","XMLDataWithOptions","NSXMLNodePrettyPrint","p","writeToFile"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export function onShowAboutDialog(context) {\n    let iconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let icon = NSImage.alloc().initByReferencingFile(iconPath);\n    let dialog = NSAlert.alloc().init();\n    dialog.setMessageText(\"Ingescape plugin\");\n    dialog.setInformativeText(\"This plugin exports a Sketch file to an Ingescape Pivot format for code generation in Qt/QML, etc. to be used in Ingescape Circle\");\n    dialog.icon = icon;\n    dialog.addButtonWithTitle(\"Get Circle\");\n    dialog.addButtonWithTitle(\"Close\");\n\n    let responseCode = dialog.runModal();\n    if (responseCode == NSAlertFirstButtonReturn) {\n        NSWorkspace.sharedWorkspace().openURL(NSURL.URLWithString(\"https://ingescape.com/circle/\"));\n    }  \n}\n\n\nexport function onOpenFileAndExportWholeAsXml(context) {\n    if(context.file) \n    {\n        let Document = require('sketch/dom').Document;\n        let filePath = String(context.file);\n        let fileName = filePath.substring(filePath.lastIndexOf(\"/\")+1, filePath.indexOf(\".\"));\n        fileName = fileName.replace(/[^a-zA-Z0-9\\-_\\s]/g, \"\")\n        fileName = fileName.trim();\n        let fileDir = filePath.substring(0, filePath.lastIndexOf(\"/\")+1) + fileName + \"_export/\";\n\n        // because of a bug, we can't call context.file directly, we must cast it as a string\n        Document.open(String(context.file), (err, document) => {\n            if (err) {\n                console.warn(\"Can't open file \", filePath, true)\n            }\n            else {\n                exportWhole(context, fileDir, false);\n                let document = require('sketch/dom').getSelectedDocument();\n                document.close();\n            }\n        });\n    }\n}\n\n/*\n Exporting file as a library consists in looking for the symbol masters\n declared as components (using the -> symbol) and exposing their\n inner parts in XML structures.\n*/\nexport function onExportLibraryAsXml(context) {\n    let Tree = require(\"./tree.js\");\n    let Xml = require(\"./xml.js\");\n    let Utils = require(\"./utils.js\");\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n    let settings = require(\"sketch/settings\");\n    let UI = require('sketch/ui');\n\n    if (!document.path) {\n        UI.alert(\"Sketch2QML: can not export library as XML\", \"You must save your Sketch file first\")\n        return;\n    }\n\n    let path = Utils.chooseFolder();\n    if (!path) {\n        log(\"onExportLibraryAsXml: action cancelled by user\");\n        return;\n    }\n\n    let docPath = decodeURI(document.path);\n    let docPathElements = docPath.split('/');\n    let documentName = \"Default\";\n    if (docPathElements.length > 0) {\n        documentName = Tree.pascalize(docPathElements[docPathElements.length - 1].replace(/.sketch/g,\"\"));\n    }\n\n    let libraryName = documentName;\n\n    // Init directories\n    let libraryFontsSubDir = \"resources/\" + libraryName + \"_library/fonts/\";\n    let libraryImagesSubDir = \"resources/\" + libraryName + \"_library/images/\";\n    Utils.createDirectoryIfNeeded(path + libraryFontsSubDir);\n    Utils.forceNewDirectory(path + libraryImagesSubDir);\n\n    UI.message(\"⚙️ Exporting library as Ingescape Pivot format. Please wait...\");\n\n    let documentContext = Tree.initDocumentContext();\n\n    //init lib\n    let xmlLibraryRoot = NSXMLElement.alloc().initWithName(\"library\");\n    Xml.xmlAddAttributesToElement(xmlLibraryRoot, [\"name\", libraryName, \"sketchVersion\", settings.version.sketch]);\n\n    //export lib\n    let symbols = document.getSymbols();\n    let symbolsIDs = [];\n    for (let i = 0; symbols && (i < symbols.length); i++){\n        let currentSymbol = symbols[i];\n\n        if (currentSymbol.name.startsWith(\"#\")){\n            continue;\n        }\n\n        if (symbolsIDs.includes(currentSymbol.id)){\n            log(\"WARNING: symbol already included (ID=\" + currentSymbol.id + \", name \" + currentSymbol.name + \")\");\n            continue;\n        } else {\n            symbolsIDs.push(currentSymbol.id);\n        }\n\n        let indexedData = documentContext.globalNamesIndex[currentSymbol.id];\n        if (!indexedData){\n            log(\"could not find indexed data for \" + currentSymbol.name + \". This element will be ignored\");\n            log(\"\\t->Please check that it is not an external master that has not been made local.\")\n            continue;\n        }\n        let actualName = Tree.getUniqueNameFromIndexedData(indexedData);\n        let actualType = Tree.getTypeFromIndexedData(indexedData);\n        let keyValues = Tree.getKeyValuesFromIndexedData(indexedData);\n        let parentType = Tree.getParentTypeFromIndexedData(indexedData);\n\n        let xmlComponent = Xml.xmlAddElement(xmlLibraryRoot, \"component\", \n                                        [\"type\", actualType, \"name\", actualName, \n                                        \"width\", currentSymbol.frame.width, \"height\", currentSymbol.frame.height,\n                                        \"hasBackground\", (currentSymbol.background.enabled && currentSymbol.background.includedInInstance),\n                                        \"backgroundColor\", Tree.getBackgroundColorAsHexValueOrSwatchReference(currentSymbol)],\n                                        null);\n\n        if (parentType)\n            Xml.xmlAddAttributesToElement(xmlComponent, [\"parentType\", parentType]);\n\n        if (keyValues.length > 0)\n            Xml.xmlAddCustomPropertiesToElement(xmlComponent, keyValues);\n\n        Tree.addSymbolMasterOverridesToXml(currentSymbol, xmlComponent, documentContext);\n        Tree.treeIterateLayers(currentSymbol.layers, xmlComponent, false, path, libraryImagesSubDir, xmlLibraryRoot, documentContext, null);\n    }\n\n    Tree.addSharedTextStylesToXml(xmlLibraryRoot);\n    Tree.addFontFilesToXml(xmlLibraryRoot, path, libraryFontsSubDir, documentContext.fontFiles, false);\n    Tree.addColorVariablesToXml(xmlLibraryRoot); // NB: it must be done after all exports because styles and items may use not imported swatches\n    Tree.clearTempContext();\n    \n    //export model to XML\n    let xmlFilePath = path + libraryName + \"_library.xml\";\n    Xml.exportXMLToPath(xmlFilePath, xmlLibraryRoot);\n\n    Utils.playSoundNamed(Utils.Sounds.Glass);\n    UI.message(\"✅ Library export completed to \" + xmlFilePath);\n    Utils.showInFinder(xmlFilePath); \n}\n\n\n/*\n Exports all artboards and orphan layers as windows\n */\nexport function onExportApplicationAsXml(context) {\n    let Tree = require(\"./tree.js\");\n    let Xml = require(\"./xml.js\");\n    let Utils = require(\"./utils.js\");\n    let sketch = require('sketch/dom')\n    let document = sketch.getSelectedDocument();\n    let settings = require(\"sketch/settings\");\n    let UI = require('sketch/ui');\n\n    if (!document.path) {\n        UI.alert(\"Sketch2QML: can not export application as XML\", \"You must save your Sketch file first\")\n        return;\n    }\n\n    let path = Utils.chooseFolder();\n    if (!path){\n        log(\"onExportApplicationAsXml: action cancelled by user\");\n        return;\n    }\n\n    let docPath = decodeURI(document.path);\n    let docPathElements = docPath.split('/');\n    let documentName = \"Default\";\n    if (docPathElements.length > 0){\n        documentName = Tree.pascalize(docPathElements[docPathElements.length - 1].replace(/.sketch/g,\"\"));\n    }\n\n    let appName = documentName;\n\n    // Init directories\n    let appFontsSubDir = \"resources/\" + appName + \"_app/fonts/\";\n    let appImagesSubDir = \"resources/\" + appName + \"_app/images/\";\n    Utils.createDirectoryIfNeeded(path + appFontsSubDir);\n    Utils.forceNewDirectory(path + appImagesSubDir);\n \n\n    UI.message(\"⚙️ Exporting application as Ingescape Pivot format. Please wait...\");\n\n    let documentContext = Tree.initDocumentContext();\n\n    //init app\n    let xmlAppRoot = NSXMLElement.alloc().initWithName(\"app\");\n    Xml.xmlAddAttributesToElement(xmlAppRoot, [\"name\", appName, \"sketchVersion\", settings.version.sketch]);\n    \n\n    //export app\n    for (let i = 0; i < document.pages.length; i++){\n        let page = document.pages[i]\n        if (page.name.startsWith(\"#\")){\n            continue;\n        }\n\n        let xmlPage = Xml.xmlAddElement(xmlAppRoot, \"page\", [\"name\", page.name], null);\n        \n        // Artboard and elements outside of artboards\n        let artboards = [];\n        let layers = [];\n        for (let j = 0; j < page.layers.length; j++){\n            let artboardOrlayer = page.layers[j];\n            let type = artboardOrlayer.sketchObject.class();\n            if (type != \"MSArtboardGroup\"){\n                layers.push(artboardOrlayer);\n            } else {\n                artboards.push(artboardOrlayer);\n            }\n        }\n\n        Tree.treeIterateLayers(layers, xmlPage, true, path, appImagesSubDir, xmlAppRoot, documentContext, null);\n        \n        for (let j = 0; j < artboards.length; j++) {\n            let artboard = artboards[j];\n\n            if (artboard.name.startsWith(\"#\")){\n                continue;\n            }\n\n            let indexedData = documentContext.globalNamesIndex[artboard.id];\n            if (!indexedData){\n                log(\"could not find indexed data for \" + artboard.name + \". This artboard will be ignored\");\n                continue;\n            }\n\n            let actualName = Tree.getUniqueNameFromIndexedData(indexedData);\n            let actualType = Tree.getTypeFromIndexedData(indexedData);\n            let keyValues = Tree.getKeyValuesFromIndexedData(indexedData);\n            let parentType = Tree.getParentTypeFromIndexedData(indexedData);\n\n            let xmlScreen = Xml.xmlAddElement(xmlPage, \"screen\", \n                                        [\"type\", actualType, \"name\", actualName, \n                                        \"width\", artboard.frame.width, \"height\", artboard.frame.height,\n                                        \"hasBackground\", (artboard.background.enabled && artboard.background.includedInExport),\n                                        \"backgroundColor\", Tree.getBackgroundColorAsHexValueOrSwatchReference(artboard)],\n                                         null);\n\n            if (parentType)\n                Xml.xmlAddAttributesToElement(xmlScreen, [\"parentType\", parentType]);                                         \n\n            if (keyValues.length > 0)\n                Xml.xmlAddCustomPropertiesToElement(xmlScreen, keyValues);\n\n            Tree.treeIterateLayers(artboard.layers, xmlScreen, true, path, appImagesSubDir, xmlAppRoot, documentContext, null);\n        }\n     }\n\n    Tree.addSharedTextStylesToXml(xmlAppRoot);\n    Tree.addFontFilesToXml(xmlAppRoot, path, appFontsSubDir, documentContext.fontFiles, false);\n    Tree.addColorVariablesToXml(xmlAppRoot); // NB: it must be done after all exports because styles and items may use not imported swatches\n    Tree.clearTempContext();\n    \n    let xmlFilePath = path + appName + \"_app.xml\"\n    Xml.exportXMLToPath(xmlFilePath, xmlAppRoot);\n\n    Utils.playSoundNamed(Utils.Sounds.Glass);\n    UI.message(\"✅ App export completed to \" + xmlFilePath);\n    Utils.showInFinder(xmlFilePath); \n};\n\n\nfunction exportWhole(context, exportDir = \"\", interactionsAllowed = true) {\n    let Tree = require(\"./tree.js\");\n    let Xml = require(\"./xml.js\");\n    let Utils = require(\"./utils.js\");\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n    let settings = require(\"sketch/settings\");\n    let UI = require('sketch/ui');\n\n    let path = (interactionsAllowed && (exportDir === \"\")) ? Utils.chooseFolder() : exportDir;\n    if (!path){\n        log(\"exportWhole: action cancelled by user\");\n        return;\n    }\n\n    let docPath = decodeURI(document.path);\n    let docPathElements = docPath.split('/');\n    let documentName = \"Default\";\n    if (docPathElements.length > 0){\n        documentName = Tree.pascalize(docPathElements[docPathElements.length - 1].replace(/.sketch/g,\"\"));\n    }\n\n    let appName = documentName;\n    let libraryName = documentName;\n\n    // Init directories\n    let appFontsSubDir = \"resources/\" + appName + \"_app/fonts/\";\n    let appImagesSubDir = \"resources/\" + appName + \"_app/images/\";\n    let libraryFontsSubDir = \"resources/\" + libraryName + \"_library/fonts/\";\n    let libraryImagesSubDir = \"resources/\" + libraryName + \"_library/images/\";\n    Utils.createDirectoryIfNeeded(path + appFontsSubDir);\n    Utils.forceNewDirectory(path + appImagesSubDir);\n    Utils.createDirectoryIfNeeded(path + libraryFontsSubDir);\n    Utils.forceNewDirectory(path + libraryImagesSubDir);\n        \n\n    let maxNumberOfSteps = 2;\n    UI.message(\"⚙️ [1/\" + maxNumberOfSteps+ \"] Exporting library as Ingescape Pivot format. Please wait...\");\n\n    let documentContext = Tree.initDocumentContext();\n\n    //export library\n    let xmlLibraryRoot = NSXMLElement.alloc().initWithName(\"library\");\n    Xml.xmlAddAttributesToElement(xmlLibraryRoot, [\"name\", libraryName, \"sketchVersion\", settings.version.sketch]);\n    \n    let symbols = document.getSymbols();\n    let symbolsIDs = [];\n    for (let i = 0; symbols && (i < symbols.length); i++){\n        let currentSymbol = symbols[i];\n\n        if (currentSymbol.name.startsWith(\"#\")){\n            continue;\n        }\n\n        if (symbolsIDs.includes(currentSymbol.id)){\n            log(\"WARNING: symbol already included (ID=\" + currentSymbol.id + \", name \" + currentSymbol.name + \")\");\n            continue;\n        } else {\n            symbolsIDs.push(currentSymbol.id);\n        }\n\n        let indexedData = documentContext.globalNamesIndex[currentSymbol.id];\n        if (!indexedData){\n            log(\"could not find indexed data for \" + currentSymbol.name + \". This element will be ignored\");\n            log(\"\\t->Please check that it is not an external master that has not been made local.\")\n            continue;\n        }\n\n        let actualName = Tree.getUniqueNameFromIndexedData(indexedData);\n        let actualType = Tree.getTypeFromIndexedData(indexedData);\n        let keyValues = Tree.getKeyValuesFromIndexedData(indexedData);\n        let parentType = Tree.getParentTypeFromIndexedData(indexedData);\n\n        let xmlComponent = Xml.xmlAddElement(xmlLibraryRoot, \"component\", \n                                        [\"type\", actualType, \"name\", actualName, \n                                        \"width\", currentSymbol.frame.width, \"height\", currentSymbol.frame.height,\n                                        \"hasBackground\", (currentSymbol.background.enabled && currentSymbol.background.includedInInstance),\n                                        \"backgroundColor\", Tree.getBackgroundColorAsHexValueOrSwatchReference(currentSymbol)], \n                                        null);\n\n        if (parentType)\n            Xml.xmlAddAttributesToElement(xmlComponent, [\"parentType\", parentType]);\n\n        if (keyValues.length > 0)\n            Xml.xmlAddCustomPropertiesToElement(xmlComponent, keyValues);\n\n        Tree.addSymbolMasterOverridesToXml(currentSymbol, xmlComponent, documentContext);\n        Tree.treeIterateLayers(currentSymbol.layers, xmlComponent, false, path, libraryImagesSubDir, xmlLibraryRoot, documentContext, null);\n    }\n\n    Tree.addSharedTextStylesToXml(xmlLibraryRoot);\n    Tree.addFontFilesToXml(xmlLibraryRoot, path, libraryFontsSubDir, documentContext.fontFiles, false);\n    Tree.addColorVariablesToXml(xmlLibraryRoot); // NB: it must be done after all exports because styles and items may use not imported swatches\n\n    Xml.exportXMLToPath(path+libraryName+\"_library.xml\", xmlLibraryRoot);\n\n\n    \n    //export app\n    UI.message(\"⚙️ [2/\" + maxNumberOfSteps + \"] Exporting application as Ingescape Pivot format. Please wait...\");\n\n    let xmlAppRoot = NSXMLElement.alloc().initWithName(\"app\");\n    Xml.xmlAddAttributesToElement(xmlAppRoot, [\"name\", appName, \"sketchVersion\", settings.version.sketch]);\n\n    for (let i = 0; i < document.pages.length; i++){\n        let page = document.pages[i]\n        if (page.name.startsWith(\"#\")){\n            continue;\n        }\n\n        let xmlPage = Xml.xmlAddElement(xmlAppRoot, \"page\", [\"name\", page.name], null);\n\n        // Artboard and elements outside of artboards\n        let artboards = [];\n        let layers = [];\n        for (let j = 0; j < page.layers.length; j++) {\n            let artboardOrlayer = page.layers[j];\n            let type = artboardOrlayer.sketchObject.class();\n            if (type != \"MSArtboardGroup\"){\n                layers.push(artboardOrlayer);\n            } else {\n                artboards.push(artboardOrlayer);\n            }\n        }\n        \n        Tree.treeIterateLayers(layers, xmlPage, true, path, appImagesSubDir, xmlAppRoot, documentContext, null);\n        \n        for (let j = 0; j < artboards.length; j++) {\n            let artboard = artboards[j];\n\n            if (artboard.name.startsWith(\"#\")){\n                continue;\n            }\n\n            let indexedData = documentContext.globalNamesIndex[artboard.id];\n            if (!indexedData){\n                log(\"could not find indexed data for \" + artboard.name + \". This artboard will be ignored\");\n                continue;\n            }\n\n            let actualName = Tree.getUniqueNameFromIndexedData(indexedData);\n            let actualType = Tree.getTypeFromIndexedData(indexedData);\n            let keyValues = Tree.getKeyValuesFromIndexedData(indexedData);\n            let parentType = Tree.getParentTypeFromIndexedData(indexedData);\n\n            let xmlScreen = Xml.xmlAddElement(xmlPage, \"screen\", \n                                        [\"type\", actualType, \"name\", actualName, \n                                        \"width\", artboard.frame.width, \"height\", artboard.frame.height,\n                                        \"hasBackground\", (artboard.background.enabled && artboard.background.includedInExport),\n                                        \"backgroundColor\", Tree.getBackgroundColorAsHexValueOrSwatchReference(artboard)],\n                                         null);\n            \n            if (parentType)\n                Xml.xmlAddAttributesToElement(xmlScreen, [\"parentType\", parentType]);\n\n            if (keyValues.length > 0)\n                Xml.xmlAddCustomPropertiesToElement(xmlScreen, keyValues);\n\n            Tree.treeIterateLayers(artboard.layers, xmlScreen, true, path, appImagesSubDir, xmlAppRoot, documentContext, null);\n        }\n    }\n\n    Tree.addSharedTextStylesToXml(xmlAppRoot);\n    Tree.addFontFilesToXml(xmlAppRoot, path, appFontsSubDir, documentContext.fontFiles, false);\n    Tree.addColorVariablesToXml(xmlAppRoot); // NB: it must be done after all exports because styles and items may use not imported swatches\n    Tree.clearTempContext();\n\n    Xml.exportXMLToPath(path+appName+\"_app.xml\", xmlAppRoot);\n\n    if (interactionsAllowed) \n    {\n        Utils.playSoundNamed(Utils.Sounds.Glass);\n        UI.message(\"✅ Export of app and lib completed to \" + path);\n        Utils.showInFinder(path);\n    }\n};\n\n\nexport function onExportWholeAsXml(context) {\n    exportWhole(context);\n};\n\n\n\n/** \n * ----------------------------------------------------\n * DEBUG ONLY\n * ----------------------------------------------------  \n*/\n\n\nexport function onExportFonts(context) {\n    let Utils = require(\"./utils.js\");\n\n    let path = Utils.chooseFolder();\n    if (path)\n    {\n        let Tree = require(\"./tree.js\");\n        let document = require('sketch/dom').getSelectedDocument();\n        let UI = require('sketch/ui');\n        let fontFiles = [];\n\n        document.pages.forEach(page => {\n            Tree.getFontFilesUsedByLayer(page, fontFiles);     \n        });\n\n        if (fontFiles.length > 0) \n        {\n            fontFiles.forEach(fontFile => {\n                let fileName = fontFile.substring(fontFile.lastIndexOf('/') + 1);\n                Utils.copyFile(fontFile, path + fileName);\n            });\n\n            UI.message(\"✅ Export completed - \" + fontFiles.length + \" font(s) exported to \" + path);\n            Utils.showInFinder(path);\n        } \n        else \n        {\n            UI.alert(\"Sketch2QML: can not export fonts\", \"❌ No font found in your Sketch document\");\n        }\n    } \n    else \n    {\n        log(\"onExportFonts: action cancelled by user\");\n    } \n};\n\n\nexport function onExportSelectedLayersAsPNG(context) {\n    let Utils = require(\"./utils.js\");\n    let document = require('sketch/dom').getSelectedDocument();\n    let UI = require('sketch/ui');\n\n    let selectedLayers = document.selectedLayers;\n    if (selectedLayers.length == 0) \n    {\n        UI.alert(\"Sketch2QML: can not export PNG\", \"❌ No layers are selected ‼️\\n=> Please select one or multiple layers before exporting.\");\n        NSBeep();\n\t\treturn;\n\t}\n\n    let path = Utils.chooseFolder();\n    if (path)\n    {\n        selectedLayers.forEach(layer => {\n            Utils.exportLayerAsPNG(layer, 4, path, layer.name, false, false);\n            //Utils.exportLayerAsPNG(layer, 4, path, layer.name + \"--frame-opacityAndTransform\", true, true);\n            //Utils.exportLayerAsPNG(layer, 4, path, layer.name + \"--noframe-opacityAndTransform\", false, true);\n            //Utils.exportLayerAsPNG(layer, 4, path, layer.name + \"--frame-noopacityAndTransform\", true, false);\n        });\n\n        UI.message(\"✅ Export completed to \" + path);\n        Utils.showInFinder(path);\n    } \n    else \n    {\n        log(\"onExportSelectedLayersAsPNG: action cancelled by user\");\n    } \n};\n\n\nexport function onExportSelectedLayersAsSVG(context) {\n    let Utils = require(\"./utils.js\");\n    let document = require('sketch/dom').getSelectedDocument();\n    let UI = require('sketch/ui');\n\n    let selectedLayers = document.selectedLayers;\n    if (selectedLayers.length == 0) \n    {\n        UI.alert(\"Sketch2QML: can not export SVG\", \"❌ No layers are selected ‼️\\n=> Please select one or multiple layers before exporting.\");\n        NSBeep();\n\t\treturn;\n\t}\n\n    let path = Utils.chooseFolder();\n    if (path)\n    {\n        selectedLayers.forEach(layer => {\n            Utils.exportLayerAsSVG(layer, path, layer.name, false, false);\n            //Utils.exportLayerAsSVG(layer, path, layer.name + \"--frame-opacityAndTransform\", true, true);\n            //Utils.exportLayerAsSVG(layer, path, layer.name + \"--noframe-opacityAndTransform\", false, true);\n            //Utils.exportLayerAsSVG(layer, path, layer.name + \"--frame-noopacityAndTransform\", true, false);\n        });\n\n        UI.message(\"✅ Export completed to \" + path);\n        Utils.showInFinder(path);\n    } \n    else \n    {\n        log(\"onExportSelectedLayersAsSVG: action cancelled by user\");\n    } \n};\n\n\nexport function onExportSelectedLayersWithUserPredefinedExportOptions(context) {\n    let Utils = require(\"./utils.js\");\n    let document = require('sketch/dom').getSelectedDocument();\n    let UI = require('sketch/ui');\n   \n    let selectedLayers = document.selectedLayers;\n    if (selectedLayers.length == 0) \n    {\n        UI.alert(\"Sketch2QML: can not export images\", \"❌ No layers are selected ‼️\\n=> Please select one or multiple layers before exporting.\");\n        NSBeep();\n\t\treturn;\n\t}\n\n    let path = Utils.chooseFolder();\n    if (path)\n    {\n        selectedLayers.forEach(layer => {\n            Utils.exportLayerWithUserDefinedExportOptions(layer, path, layer.name, false, false);\n            //Utils.exportLayerWithUserDefinedExportOptions(layer, path, layer.name + \"--frame-opacityAndTransform\", true, true);\n            //Utils.exportLayerWithUserDefinedExportOptions(layer, path, layer.name + \"--noframe-opacityAndTransform\", false, true);\n            //Utils.exportLayerWithUserDefinedExportOptions(layer, path, layer.name + \"--frame-noopacityAndTransform\", true, false);\n        });\n\n        UI.message(\"✅ Export completed to \" + path);\n        Utils.showInFinder(path);\n    } \n    else \n    {\n        log(\"onExportSelectedLayersWithUserPredefinedExportOptions: action cancelled by user\");\n    } \n};\n\n\n","// TODO: add all reserved keywords\nlet forbiddenNames = [\n  \"bool\",\n  \"true\",\n  \"false\",\n  \"double\",\n  \"float\",\n  \"real\",\n  \"int\",\n  \"long\",\n  \"short\",\n  \"string\",\n  \"url\",\n  \"var\",\n  \"let\",\n  \"function\",\n  \"if\",\n  \"else\",\n  \"for\",\n  \"while\",\n  \"do\",\n  \"break\",\n  \"switch\",\n  \"case\",\n  \"default\",\n  \"continue\",\n  \"root\",\n  \"delete\",\n  \"bottom\",\n  \"top\",\n  \"left\",\n  \"right\",\n  \"baseline\"\n];\n\n\nlet diacriticsMap = {\n    A: /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g,\n    AE: /[\\u00C6]/g,\n    E: /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g,\n    I: /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g,\n    O: /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g,\n    OE: /[\\u0152]/g,\n    U: /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g,\n    a: /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g,\n    ae: /[\\u00E6\\u01FD\\u01E3]/g,\n    c: /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g,\n    e: /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g,\n    i: /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g,\n    o: /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g,\n    oe: /[\\u0153]/g,\n    u: /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g\n  };\n\n\nlet numberOfImagesPerLayerExport = 2; // 2 => (original size, @2x), 4 => (original size, @2x, @3x, @4x)\n\nlet maximumImageWidthOrHeight = 16384;\n\nlet GLOBALNAMESINDEX_UNIQUENAME = 0;\nlet GLOBALNAMESINDEX_TYPE = 1;\nlet GLOBALNAMESINDEX_KEYVALUES = 2;\nlet GLOBALNAMESINDEX_RAWNAME = 3;\nlet GLOBALNAMESINDEX_PARENTTYPE = 4;\n\nlet TEMP_CONTEXT = {};\n\n\nfunction getUniqueNameFromIndexedData(data) {\n    return data[GLOBALNAMESINDEX_UNIQUENAME];\n}\n\n\nfunction getTypeFromIndexedData(data) {\n    return data[GLOBALNAMESINDEX_TYPE];\n}\n\n\nfunction getKeyValuesFromIndexedData(data) {\n    return data[GLOBALNAMESINDEX_KEYVALUES];\n}\n\n\nfunction getRawNameFromIndexedData(data) {\n    return data[GLOBALNAMESINDEX_RAWNAME];\n}\n\n\nfunction getParentTypeFromIndexedData(data) {\n    return data[GLOBALNAMESINDEX_PARENTTYPE];\n}\n\n\nfunction clearTempContext() {\n    TEMP_CONTEXT = {\n        availableSwatchIDs: [],\n        missingSwatches: {}\n    };\n}\n\n\nfunction initDocumentContext() {\n    clearTempContext();\n\n    let documentContext = {\n        fontFiles: [],\n        sharedLayerStylesIndex: {},\n        sharedTextStylesIndex: {},\n        globalNamesIndex: {},\n        textsWithOutOfSyncStyle: {}\n    };\n\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n\n    document.sharedLayerStyles.forEach(style => {\n        documentContext.sharedLayerStylesIndex[style.id] = style;\n    });\n\n    document.sharedTextStyles.forEach(style => {\n        documentContext.sharedTextStylesIndex[style.id] = style;\n    });\n\n    treePopulateGlobalNamesIndex(documentContext);\n    let nb = Object.keys(documentContext.globalNamesIndex).length;\n    log(\"Indexed elements : \" + nb);\n\n    let usedNativeSwatches = document.sketchObject.documentData().allSwatches();\n    if (usedNativeSwatches.length > 0) {\n        usedNativeSwatches.forEach(nativeSwatch => {\n            TEMP_CONTEXT.availableSwatchIDs.push(String(nativeSwatch.objectID()));\n        });\n    }\n\n    return documentContext;\n}\n\n\nfunction addFontFileToContext(context, fontFilePath) {\n    if (context && context.fontFiles && fontFilePath && !context.fontFiles.includes(fontFilePath))\n        context.fontFiles.push(fontFilePath);\n}\n\n\nfunction getFontFilesUsedByLayer(layer, result) {\n    if (layer) {\n        let fontFilePath = layerFontFilePath(layer);\n        if (fontFilePath && !result.includes(fontFilePath)) {\n            result.push(fontFilePath);\n        }\n\n        if (layer.layers && (layer.layers.length > 0)) {\n            layer.layers.forEach(subLayer => {\n                getFontFilesUsedByLayer(subLayer, result);\n            });\n        }\n    }\n}\n\n\nfunction addSymbolMasterOverridesToXml(symbolMaster, xmlRoot, documentContext){\n    if (symbolMaster.overrides){\n        let Xml = require(\"./xml.js\");\n        symbolMaster.overrides.forEach(overR => {\n            // NB: Since october 2022, Sketch allows to override font properties (weight, alignment, etc.) and colors\n            //     within Symbol instances without creating a text style or layer style for each variation\n            if (overR.editable\n                && ((overR.property == \"image\") || (overR.property == \"textStyle\") || (overR.property == \"stringValue\") \n                    || (overR.property == \"layerStyle\") || (overR.property == \"symbolID\"))\n                ) {\n                let overrideTargetPath = treeBuildOverrideTargetPath(overR, documentContext.globalNamesIndex)\n                Xml.xmlAddElement(xmlRoot, \"overridable\", [\"property\", overR.property, \"on\", overrideTargetPath], null);\n            }\n        });\n    }\n}\n\n\nfunction treeIterateLayers(layers, parent, shallIgnoreSymbolMasters, rootDirPath, imagesSubDir, xmlRoot,\n                            documentContext, mask){\n    let Xml = require(\"./xml.js\");\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n    let actualParent = parent; //parent may change during iteration (when finding masks)\n    let currentMask = null;\n    \n    for (let i = 0; layers && (i < layers.length); i++){\n        let l = layers[i]\n        let type = l.sketchObject.class()\n        let name = l.name;\n\n        // We skip special elements\n        if (name.startsWith(\"#\"))\n            continue\n\n        if ((type == \"MSSymbolMaster\") && shallIgnoreSymbolMasters){\n            continue;\n        } else if ((type == \"MSArtboardGroup\") || (type == \"MSSliceLayer\") || (type == \"MSHotspotLayer\")) {\n            continue;\n        } \n        \n        let indexedData = documentContext.globalNamesIndex[l.id];\n        if (!indexedData){\n            log(\"ERROR: could not find indexed data for \" + l.name + \" (\" + l.id + \") : ignore this element.\");\n            continue;\n        }\n        let actualName = getUniqueNameFromIndexedData(indexedData);\n        let actualType = getTypeFromIndexedData(indexedData);\n        let keyValues = getKeyValuesFromIndexedData(indexedData);\n\n        let isCustomClass = false;\n        \n        //handle special types that will add specific beacons in XML or require specific logics\n        if (actualType == \"includeLibrary\"){\n            let rawName = getRawNameFromIndexedData(indexedData);\n            let xmlCurrent = Xml.xmlAddElement(actualParent, \"include\", [\"name\", rawName], null);\n            if (keyValues.length > 0)\n                addCustomPropertiesToXml(xmlCurrent, keyValues);\n\n        } else if (actualType == \"includeExternal\") {\n            let xmlCurrent = Xml.xmlAddElement(actualParent, \"external\", [\"name\", actualName], null);\n            if (keyValues.length > 0)\n                addCustomPropertiesToXml(xmlCurrent, keyValues);\n            \n        } else if ((type == \"MSTextLayer\") && (actualType == \"includeData\")) {\n            let xmlCurrent = Xml.xmlAddElement(actualParent, \"data\", [\"name\", actualName], l.text);\n            if (keyValues.length > 0)\n                addCustomPropertiesToXml(xmlCurrent, keyValues);\n                \n        } else {\n            //FIXME: using internal Sketch API that might change in future versions\n            if (l._object.shouldBreakMaskChain()){\n                actualParent = parent; //restore original parent because we break mask chain with this element\n                currentMask = null;\n            }\n            \n            let xmlCurrent = Xml.xmlAddElement(actualParent, \"item\", [\"name\", actualName], null);\n\n            addFontFileToContext(documentContext, layerFontFilePath(l));\n            \n            if (type == \"MSSymbolInstance\") {\n                if (!l.master) {\n                    log(\"could not find the symbol master used by \" + l.name);\n                    log(\"\\t->Please check that it does not use an external symbol master that has not been made local.\")\n                    continue;\n                }\n\n                //Instance is from a specific class and will be handled as a future software component instance\n                let indexedDataSymbolMaster = documentContext.globalNamesIndex[l.master.id];\n                if (!indexedDataSymbolMaster) {\n                    log(\"could not find indexed data for \" + l.master.name);\n                    log(\"\\t->Please check that it is not an external symbol master that has not been made local.\")\n                    continue;\n                }\n                \n                actualType = getTypeFromIndexedData(indexedDataSymbolMaster); //get resolved type from master symbol\n                isCustomClass = true;\n                type = actualType; //this will relevantly block iteration on subelements at the end of this function\n                \n                //Symbol instances require specific management around overrides\n                //Overrides are stored \"as-is\" to be applied as property values during code generation.\n                if (l.overrides){\n                    let nb = l.overrides.length;\n                    let symbolOverridesHash = {};\n                    for (let j = 0; j < nb; j++){\n                        let overR = l.overrides[j];\n\n                        if (overR.editable && !overR.isDefault){\n                            let indexedDataOverride = documentContext.globalNamesIndex[overR.affectedLayer.id];\n                            let originalOverrideTargetPath = treeBuildOverrideTargetPath(overR, documentContext.globalNamesIndex);\n                            let overrideTargetPath = originalOverrideTargetPath;\n                            if (!indexedDataOverride){\n                                log(\"ERROR: could not find indexed data for \" + overR.affectedLayer.name + \" (\" + overR.affectedLayer.id + \"). Please check that this element is not rendered as an image.\");\n                                continue;\n                            }\n                            //log(\"handling override for \" + overR.affectedLayer.id + \" - \" + overR.affectedLayer.name + \" - \" +  + \" (\" + indexedDataOverride + \")\");\n\n\n                            //handle false positive i.e. overrides that use the default value even if isDefault returns false\n                            // => it happens when:\n                            //  - a symbol overrides a text and this symbol is instantiated in other symbols\n                            //  - a graphic designer changes the style of an instance and then reselect the default style\n                            if (overR.sketchObject && (!overR.sketchObject.overrideValue() || (overR.sketchObject.defaultValue() == overR.sketchObject.currentValue())))\n                            {\n                                //log(\"Skipping false override: layer=\" + l.name + \" path=\" + originalOverrideTargetPath + \" value=\" + overR.value);\n                                continue;\n                            }\n\n                            \n                            //handle possible nesting of overrides\n                            let overrideParent = xmlCurrent; //set default parent for override data (may change with symbol overrides)\n\n                            let prefix = overrideTargetPath;\n                            let dotIndex = overrideTargetPath.lastIndexOf(\".\");\n                            while (dotIndex >= 0) {\n                                prefix = prefix.substring(0, dotIndex);\n                                //log(\"check prefix \" + prefix + \" for \" + overrideTargetPath);\n                                if ((prefix.length > 0) & symbolOverridesHash.hasOwnProperty(prefix)) {\n                                    //log(\"found prefix \" + prefix + \" for \" + overrideTargetPath);\n                                    overrideParent = symbolOverridesHash[prefix];\n                                    overrideTargetPath = overrideTargetPath.substring(dotIndex + 1, overrideTargetPath.length);\n                                    break;\n                                } else {\n                                    dotIndex = prefix.lastIndexOf(\".\");\n                                }\n                            }\n                            \n                            if (overR.property == \"image\") {\n                                //we generate image file from data\n                                let imgData = overR.value.nsdata;\n                                let imgName = NSString.stringWithFormat(\"%@.png\", overR.id);\n                                let imgRelativePath = NSString.stringWithFormat(\"%@%@\", imagesSubDir, imgName);\n                                imgData.writeToFile_atomically(NSString.stringWithFormat(\"%@/%@\", rootDirPath, imgRelativePath), false);\n                                Xml.xmlAddElement(overrideParent, \"override\", [\"property\", overR.property, \"value\", imgRelativePath, \"on\", overrideTargetPath], null);\n                            } else if (overR.property == \"textStyle\") {\n                                let currentOver =Xml.xmlAddElement(overrideParent, \"override\", [\"property\", overR.property, \"value\", overR.value, \"on\", overrideTargetPath], null);\n                                if (documentContext.sharedTextStylesIndex[overR.value]) {\n                                    let affectedLayerUsesAnOutOfSyncStyle = documentContext.textsWithOutOfSyncStyle.hasOwnProperty(overR.affectedLayer.id);\n                                    let overrideStyle = documentContext.sharedTextStylesIndex[overR.value].style;\n\n                                    if (affectedLayerUsesAnOutOfSyncStyle) {\n                                       Xml.xmlAddElement(currentOver, \"textStyle\", [\"sharedStyleId\", overR.value, \"affectedLayerStyleIsOutOfSync\", true], null);\n                                    } else {\n                                       Xml.xmlAddElement(currentOver, \"textStyle\", [\"sharedStyleId\", overR.value], null);\n                                    }\n\n                                    addFontFileToContext(documentContext, styleFontFilePath(overrideStyle));\n                                } else {\n                                    log(\"could not find textStyle\" + overR.value + \" to override a symbol instance of \"\n                                        + l.name + \". This override will be ignored\");\n                                    log(\"\\t->Please check that it is not an external text style that has not been made local.\")\n                                    continue;\n                                }\n                            } else if (overR.property == \"layerStyle\") {\n                                let currentOver =Xml.xmlAddElement(overrideParent, \"override\", [\"property\", overR.property, \"value\", overR.value, \"on\", overrideTargetPath], null);\n                                if (documentContext.sharedLayerStylesIndex[overR.value]) {\n                                    let styleXML =Xml.xmlAddElement(currentOver, \"layerStyle\", null, null);\n                                    treeAddAttributesFromLayerStyle(styleXML, type, documentContext.sharedLayerStylesIndex[overR.value].style);\n                                } else {\n                                    log(\"could not find layerStyle\" + overR.value + \" to override a symbol instance of \"\n                                        + l.name + \". This override will be ignored\");\n                                    log(\"\\t->Please check that it is not an external layer style that has not been made local.\")\n                                    continue;\n                                }\n                            } else if (overR.property == \"stringValue\") {\n                               Xml.xmlAddElement(overrideParent, \"override\", [\"property\", overR.property, \"value\", overR.value, \"on\", overrideTargetPath], null);\n                            } else if (overR.property == \"symbolID\") {\n                                let indexexDataOldSymbol = documentContext.globalNamesIndex[overR.affectedLayer.master.id];\n                                if (!indexexDataOldSymbol){\n                                    log(\"could not find indexed data for SymbolMaster \" + overR.affectedLayer.master.name + \" to override a symbol instance of \"\n                                        + l.name + \". This override will be ignored\");\n                                    log(\"\\t->Please check that it is not an external master that has not been made local.\")\n                                    continue;\n                                }\n                                \n                                let oldType = getTypeFromIndexedData(indexexDataOldSymbol);\n                                let newType = \"\"; //may be empty id \"no symbol\" override\n                                if (overR.value.length > 0) {\n                                    let newSymbol = document.getSymbolMasterWithID(overR.value);\n                                    if (newSymbol) {\n                                        let indexedDataNewSymbol = documentContext.globalNamesIndex[newSymbol.id];\n                                        if (!indexedDataNewSymbol){\n                                            log(\"could not find indexed data for SymbolMaster \" + newSymbol.name + \" to override a symbol instance of \"\n                                                + l.name + \". This override will be ignored\");\n                                            log(\"\\t->Please check that it is not an external master that has not been made local.\")\n                                            break;\n                                        }\n                                        newType = getTypeFromIndexedData(indexedDataNewSymbol); //symbol extracted class\n                                    } else {\n                                        log(\"could not find SymbolMaster with ID \" + overR.value + \" to override a symbol instance of \"\n                                        + l.name + \". This override will be ignored\");\n                                        log(\"\\t->Please check that it is not an external master that has not been made local.\")\n                                        break;\n                                    }\n                                }\n\n                                symbolOverridesHash[originalOverrideTargetPath] =Xml.xmlAddElement(overrideParent, \"override\", [\"property\", overR.property, \"newType\", newType, \"oldType\", oldType, \"on\", overrideTargetPath], null);\n                            }\n                        }\n                    }\n                }\n                Xml.xmlAddAttributesToElement(xmlCurrent, [\"symbolMaster\", getUniqueNameFromIndexedData(indexedDataSymbolMaster), \"type\", actualType]);\n                \n                let parentType = getParentTypeFromIndexedData(indexedDataSymbolMaster);\n                if (parentType)\n                    Xml.xmlAddAttributesToElement(xmlCurrent, [\"symbolMasterParentType\", parentType]);\n                \n            } else {\n                //other types are handled without anything specific\n                Xml.xmlAddAttributesToElement(xmlCurrent, [\"type\", actualType]);\n                //NB: overrides are applied if necessary when calling treeAddAttributesFromLayerData & co. below.\n                //We do not apply overrides on the model directly as it would modify\n                //the original Sketch file...\n            }\n            \n            //Masks\n            //FIXME: using internal Sketch API that might change in future versions\n            if (l._object.hasClippingMask()) {\n                //log(\"\" + actualName + \" is a mask\");\n                Xml.xmlAddAttributesToElement(xmlCurrent, [\"isMask\", 1]);\n                actualParent = xmlCurrent;\n                currentMask = l;\n            }\n            \n            //Add custom keys and values extracted from layer name\n            if (keyValues.length > 0)\n                addCustomPropertiesToXml(xmlCurrent, keyValues);\n            \n            //add layer data\n            //FIXME: compute x/y/width/height changes due to masks and mask chains breaks reparenting\n            //FIXME: also handle proper size for clipped images\n            let shallBlockBecauseExportExists = treeAddAttributesFromLayerData(actualName, xmlCurrent, type, l, rootDirPath, imagesSubDir, isCustomClass, currentMask, actualType);\n\n            if (!shallBlockBecauseExportExists && l && (type == \"MSArtboardGroup\" || type == \"MSLayerGroup\" || type == \"MSShapeGroup\"\n                      || type == \"MSSymbolMaster\" || type == \"MSSymbolInstance\")){\n                treeIterateLayers(l.layers, xmlCurrent, shallIgnoreSymbolMasters, rootDirPath, imagesSubDir, xmlRoot, documentContext, currentMask);\n            }\n        }\n    }\n}\n\n\nfunction treeAddAttributesFromPointData(currentXMLElement, point){\n    if (point && point.sketchObject) {\n        let Xml = require(\"./xml.js\");\n        let pointType = point.pointType;\n\n        let pointAttributes = [];\n        pointAttributes.push(\"pointType\");\n        pointAttributes.push(point.pointType);\n        pointAttributes.push(\"x\");\n        pointAttributes.push(point.point.x);\n        pointAttributes.push(\"y\");\n        pointAttributes.push(point.point.y);\n\n        if (pointType == 'Straight') {\n            pointAttributes.push(\"cornerRadius\");\n            pointAttributes.push(point.cornerRadius);\n\n        } else if (pointType == 'Undefined') {\n            //TODO: check if we can really obtain a point with an undefined type\n            let nativePoint = point.sketchObject;\n\n            if (nativePoint.hasCurveFrom()) {\n                pointAttributes.push(\"curveFromX\");\n                pointAttributes.push(point.curveFrom.x);\n                pointAttributes.push(\"curveFromY\");\n                pointAttributes.push(point.curveFrom.y);\n            }\n\n            if (nativePoint.hasCurveTo()) {\n                pointAttributes.push(\"curveToX\");\n                pointAttributes.push(point.curveTo.x);\n                pointAttributes.push(\"curveToY\");\n                pointAttributes.push(point.curveTo.y);\n            }\n            \n            pointAttributes.push(\"cornerRadius\");\n            pointAttributes.push(point.cornerRadius);\n\n        } else if (pointType != 'Undefined') {\n            pointAttributes.push(\"curveFromX\");\n            pointAttributes.push(point.curveFrom.x);\n            pointAttributes.push(\"curveFromY\");\n            pointAttributes.push(point.curveFrom.y);\n            pointAttributes.push(\"curveToX\");\n            pointAttributes.push(point.curveTo.x);\n            pointAttributes.push(\"curveToY\");\n            pointAttributes.push(point.curveTo.y);\n        }\n\n       Xml.xmlAddElement(currentXMLElement, \"point\", pointAttributes, null);\n\n    }  else console.warn(\"treeAddAttributesFromPointData: invalid argument 'point'\");\n}\n\n\nfunction treeAddTextBehaviour(currentXMLElement, layer) {\n    if (!isTextLayer(layer))\n        return;\n\n    let Xml = require(\"./xml.js\");\n    Xml.xmlAddAttributesToElement(currentXMLElement, [\"textBehaviour\", layerTextBehaviour(layer)]);\n}\n\n\nfunction treeAddAttributesFromTextStyle(currentXMLElement, layerOrSharedTextStyle, sharedTextStyle) {\n    let Xml = require(\"./xml.js\");\n\n    if (!layerOrSharedTextStyle)\n        return;\n\n    let isText = isTextLayer(layerOrSharedTextStyle);\n    let style = layerOrSharedTextStyle.style;\n    let sharedStyle = (sharedTextStyle ? sharedTextStyle.style : null); \n    if (!style)\n        return;\n\n    let attributes = [];\n\n    if (!sharedStyle || (style.opacity !== sharedStyle.opacity)) {\n        attributes.push(\"opacity\");\n        attributes.push(style.opacity);\n    }\n\n    if (!sharedStyle || (style.blendingMode !== sharedStyle.blendingMode)) {\n        attributes.push(\"blendingMode\");\n        attributes.push(style.blendingMode);\n    }\n\n    let textBehaviour = \"autoWidth\";\n    if (isText) {\n        textBehaviour = layerTextBehaviour(layerOrSharedTextStyle);\n\n        attributes.push(\"textBehaviour\");\n        attributes.push(textBehaviour);\n    }\n\n    if (!sharedStyle || (style.alignment != sharedStyle.alignment)) {\n        attributes.push(\"alignment\");\n        attributes.push(style.alignment);\n    }\n    \n    // Special case: Sketch does not reset the value of verticalAlignment when we switch from \"fixedSize\" to \"autoWidth\" or \"autoHeight\"\n    let verticalAlignment = (!isText || (textBehaviour === \"fixedSize\")) ? style.verticalAlignment : \"top\";\n    if (!sharedStyle || (verticalAlignment != sharedStyle.verticalAlignment)) {\n        attributes.push(\"verticalAlignment\");\n        attributes.push(verticalAlignment);\n    }\n\n    if (!sharedStyle || (style.textColor != sharedStyle.textColor)) {\n        attributes.push(\"textColor\");\n        attributes.push(getTextColorAsHexValueOrSwatchReference(style));\n    }\n\n    if (!sharedStyle || (style.lineHeight != sharedStyle.lineHeight)) {\n        if (style.lineHeight) {\n            attributes.push(\"lineHeight\");\n            attributes.push(style.lineHeight);\n        }\n    }\n\n    if (!sharedStyle || (style.paragraphSpacing != sharedStyle.paragraphSpacing)) {\n        attributes.push(\"paragraphSpacing\");\n        attributes.push(style.paragraphSpacing);\n    }\n\n    // The following properties define our font\n    let needFontFamily = (!sharedStyle || (style.fontFamily != sharedStyle.fontFamily));\n    let needFontSize = (!sharedStyle || (style.fontSize != sharedStyle.fontSize));\n    let needFontWeight = (!sharedStyle || (style.fontWeight != sharedStyle.fontWeight));\n    let needFontStyle = (!sharedStyle || (style.fontStyle != sharedStyle.fontStyle));\n    let needFontVariant = (!sharedStyle || (style.fontVariant != sharedStyle.fontVariant));\n    let needFontStretch = (!sharedStyle || (style.fontStretch != sharedStyle.fontStretch));\n    let needKerning = (!sharedStyle || (style.kerning != sharedStyle.kerning));\n    let needTextTransform = (!sharedStyle || (style.textTransform != sharedStyle.textTransform));\n    let needTextUnderline = (!sharedStyle || (style.textUnderline != sharedStyle.textUnderline));\n    let needTextStrikethrough = (!sharedStyle || (style.textStrikethrough != sharedStyle.textStrikethrough));\n\n    if (needFontFamily || needFontSize || needFontWeight || needFontStyle || needFontVariant\n        || needFontStretch || needKerning || needTextTransform || needTextUnderline || needTextStrikethrough) {\n        attributes.push(\"fontFamily\");\n        attributes.push(style.fontFamily);\n\n        attributes.push(\"fontSize\");\n        attributes.push(style.fontSize);\n\n        attributes.push(\"fontWeight\");\n        attributes.push(style.fontWeight);\n\n        if (style.fontStyle) {\n            attributes.push(\"fontStyle\");\n            attributes.push(style.fontStyle);\n        }\n\n        if (style.fontVariant) {\n            attributes.push(\"fontVariant\");\n            attributes.push(style.fontVariant);\n        }\n\n        if (style.fontStretch) {\n            attributes.push(\"fontStretch\");\n            attributes.push(style.fontStretch);\n        }\n\n         // NB: we also need to export raw properties to help translation from Sketch to UI toolkits\n        attributes.push(\"fontPostscriptName\");\n        attributes.push(fontPostscriptNameFromStyle(style));\n        attributes.push(\"fontStyleName\");\n        attributes.push(fontStyleNameFromStyle(style));\n\n        if (style.kerning) {\n            attributes.push(\"kerning\");\n            attributes.push(style.kerning);\n        }\n\n        attributes.push(\"textTransform\");\n        attributes.push(style.textTransform);\n\n        if (style.textUnderline) {\n            attributes.push(\"textUnderline\");\n            attributes.push(style.textUnderline);\n        }\n\n        if (style.textStrikethrough) {\n            attributes.push(\"textStrikethrough\");\n            attributes.push(style.textStrikethrough);\n        }\n    }\n\n    Xml.xmlAddAttributesToElement(currentXMLElement, attributes);\n}\n\n\nfunction treeAddAttributesFromLayerStyle(currentXMLElement, type, style) {\n    if (!style)\n        return;\n\n    let Xml = require(\"./xml.js\");\n    let attributes = [];\n\n    attributes.push(\"opacity\");\n    attributes.push(style.opacity);\n    \n    attributes.push(\"blendingMode\");\n    attributes.push(style.blendingMode);\n\n    //TODO: blur, shadows, innershadows\n    \n    if (style.borderOptions) {\n        if (style.borderOptions.startArrowhead != 'None') {\n            attributes.push(\"startArrowhead\");\n            attributes.push(style.borderOptions.startArrowhead);\n        }\n        if (style.borderOptions.endArrowhead != 'None') {\n            attributes.push(\"endArrowhead\");\n            attributes.push(style.borderOptions.endArrowhead);\n        }\n        let dashPatternLength = style.borderOptions.dashPattern.length;\n        if (dashPatternLength != 0) {\n            attributes.push(\"dashPattern\");\n            let dashPatternString = style.borderOptions.dashPattern.join(',');\n            if (dashPatternLength % 2 == 0) {\n                attributes.push(dashPatternString);\n            } else {\n                //NB: In most UI toolkits, the dash pattern must be specified as an even \n                // number of values that specify the lengths of alternating dashes and gaps\n                attributes.push(dashPatternString + \",\" + dashPatternString);\n            }\n        }\n        if (style.borderOptions.lineEnd != 'Butt') {\n            attributes.push(\"lineEnd\");\n            attributes.push(style.borderOptions.lineEnd);\n        }\n        if (style.borderOptions.lineJoin != 'Miter') {\n            attributes.push(\"lineJoin\");\n            attributes.push(style.borderOptions.lineJoin);\n        }\n    }\n\n    if (style.fills.length > 0) {\n        style.fills.forEach(fill => {\n            let xmlFill =Xml.xmlAddElement(currentXMLElement, \"fill\", null, null);\n            let fillAttributes = [];\n            let fillType = fill.fillType;\n            fillAttributes.push(\"fillType\");\n            fillAttributes.push(fillType);\n            fillAttributes.push(\"enabled\");\n            fillAttributes.push(fill.enabled);\n\n            if (fillType == \"Color\") {\n                fillAttributes.push(\"color\");\n                fillAttributes.push(getFillColorAsHexValueOrSwatchReference(fill));\n\n            } else if (fillType == \"Gradient\") {\n                let gradient = fill.gradient;\n                let gradientType = gradient.gradientType;\n                fillAttributes.push(\"gradientType\");\n                fillAttributes.push(gradientType);\n                fillAttributes.push(\"fromX\");\n                fillAttributes.push(gradient.from.x);\n                fillAttributes.push(\"fromY\");\n                fillAttributes.push(gradient.from.y);\n                fillAttributes.push(\"toX\");\n                fillAttributes.push(gradient.to.x);\n                fillAttributes.push(\"toY\");\n                fillAttributes.push(gradient.to.y);\n\n                if (gradientType == \"Radial\") {\n                    fillAttributes.push(\"aspectRatio\");\n                    fillAttributes.push(gradientType.aspectRatio);\n                }\n\n                gradient.stops.forEach(stop => {\n                    let stopAttributes = [];\n                    stopAttributes.push(\"position\");\n                    stopAttributes.push(stop.position);\n                    stopAttributes.push(\"color\");\n                    stopAttributes.push(rgbaToArgbOrRgb(stop.color));\n                    \n                   Xml.xmlAddElement(xmlFill, \"stop\", stopAttributes, null);\n                });\n\n            } else if (fillType == \"Pattern\") {\n                fillAttributes.push(\"patternType\");\n                fillAttributes.push(fill.pattern.patternType);\n                fillAttributes.push(\"tileScale\");\n                fillAttributes.push(fill.pattern.tileScale);\n                //TODO: image\n            }\n\n            Xml.xmlAddAttributesToElement(xmlFill, fillAttributes);     \n        });\n    }\n   \n    if (style.borders.length > 0) {\n        style.borders.forEach(border => {\n            let xmlBorder =Xml.xmlAddElement(currentXMLElement, \"border\", null, null);\n            let borderAttributes = [];\n            let fillType = border.fillType;\n            borderAttributes.push(\"fillType\");\n            borderAttributes.push(fillType);\n            borderAttributes.push(\"thickness\");\n            borderAttributes.push(border.thickness);\n            borderAttributes.push(\"position\");\n            borderAttributes.push(border.position);\n            borderAttributes.push(\"enabled\");\n            borderAttributes.push(border.enabled);\n\n            if (fillType == \"Color\") {\n                borderAttributes.push(\"color\");\n                borderAttributes.push(getFillColorAsHexValueOrSwatchReference(border));\n\n            } else if (fillType == \"Gradient\") {\n                let gradient = border.gradient;\n                let gradientType = gradient.gradientType;\n                borderAttributes.push(\"gradientType\");\n                borderAttributes.push(gradientType);\n                borderAttributes.push(\"fromX\");\n                borderAttributes.push(gradient.from.x);\n                borderAttributes.push(\"fromY\");\n                borderAttributes.push(gradient.from.y);\n                borderAttributes.push(\"toX\");\n                borderAttributes.push(gradient.to.x);\n                borderAttributes.push(\"toY\");\n                borderAttributes.push(gradient.to.y);\n\n                if (gradientType == \"Radial\") {\n                    borderAttributes.push(\"aspectRatio\");\n                    borderAttributes.push(gradientType.aspectRatio);\n                }\n\n                gradient.stops.forEach(stop => {\n                    let stopAttributes = [];\n                    stopAttributes.push(\"position\");\n                    stopAttributes.push(stop.position);\n                    stopAttributes.push(\"color\");\n                    stopAttributes.push(rgbaToArgbOrRgb(stop.color));\n                    \n                   Xml.xmlAddElement(xmlBorder, \"stop\", stopAttributes, null);\n                });\n            }\n\n            Xml.xmlAddAttributesToElement(xmlBorder, borderAttributes);\n        });\n    }\n\n    Xml.xmlAddAttributesToElement(currentXMLElement, attributes);\n}\n\n\nfunction treeAddAttributesFromLayerData(name, currentXMLElement, type, layer, rootDirPath, imagesSubDir,\n                                        isCustomClass, currentMask, actualType){\n    /*\n    return true if item shall stop iteration, generally because it is renderer as an image or has exports\n    return false if item allows iterations\n    */\n    let Xml = require(\"./xml.js\");\n    let Utils = require(\"./utils.js\");\n    let attributes = [];\n    \n    attributes.push(\"id\");\n    attributes.push(layer.id);\n    \n    //generic attributes\n    if (layer.locked){\n        attributes.push(\"locked\");\n        attributes.push(\"1\");\n    }\n    if (layer.hidden){\n        attributes.push(\"hidden\");\n        attributes.push(\"1\");\n    }\n    if (layer.transform){\n        if (layer.transform.rotation !== 0) {\n            attributes.push(\"rotation\");\n            attributes.push(layer.transform.rotation);\n        }\n        if (layer.transform.flippedHorizontally){\n            attributes.push(\"flippedHorizontally\");\n            attributes.push(\"1\");\n        }\n        if (layer.transform.flippedVertically){\n            attributes.push(\"flippedVertically\");\n            attributes.push(\"1\");\n        }\n    }\n    if (layer.sketchObject.hasFixedWidth()){\n        attributes.push(\"hasFixedWidth\");\n        attributes.push(\"1\");\n    }\n    if (layer.sketchObject.hasFixedHeight()){\n        attributes.push(\"hasFixedHeight\");\n        attributes.push(\"1\");\n    }\n    if (layer.sketchObject.hasFixedLeft()){\n        attributes.push(\"hasFixedLeft\");\n        attributes.push(\"1\");\n        // NB: fixedLeft is x\n    }\n    if (layer.sketchObject.hasFixedTop()){\n        attributes.push(\"hasFixedTop\");\n        attributes.push(\"1\");\n        // NB: fixedTop is y\n    }\n    if (layer.sketchObject.hasFixedRight()){\n        attributes.push(\"hasFixedRight\");\n        attributes.push(\"1\");\n        attributes.push(\"fixedRight\");\n        attributes.push(layer.parent ? Utils.roundBy(layer.parent.frame.width - (layer.frame.x + layer.frame.width), 0.5) : 0);\n    }\n    if (layer.sketchObject.hasFixedBottom()){\n        attributes.push(\"hasFixedBottom\");\n        attributes.push(\"1\");\n        attributes.push(\"fixedBottom\");\n        attributes.push(layer.parent ? Utils.roundBy(layer.parent.frame.height - (layer.frame.y + layer.frame.height), 0.5) : 0);\n    }\n\n\n    if (layer.frame){\n        // NB: one decimal precision to allow sharp rendering if we use a centered border (BorderPosition = Centered) with an odd thickness value\n        //     If the thickness value is even (2, 4, etc.), x and y must be integer values; whereas if the thickness value is off (1, 3, etc.), \n        //     x and y must be decimal values ending with '.5' (half pixel offset)\n        attributes.push(\"x\");\n        attributes.push(Utils.roundBy(layer.frame.x, 0.5));\n        attributes.push(\"y\");\n        attributes.push(Utils.roundBy(layer.frame.y, 0.5));\n        attributes.push(\"width\");\n        attributes.push(Math.ceil(layer.frame.width));\n        attributes.push(\"height\");\n        attributes.push(Math.ceil(layer.frame.height));\n    }\n\n    //flows\n    if (layer.flow && layer.flow.target){\n       Xml.xmlAddElement(currentXMLElement, \"flow\",\n                      [\"targetName\", layer.flow.target.name,\n                       \"targetId\", layer.flow.targetId,\n                       \"type\", layer.flow.animationType], null);\n    }\n    \n    let renderingAsImage = false;\n    //handle unsupported types by rendering them as an image\n    //NB: supported types are at the moment : text, rectangle, image, group, window\n    //NB: groups come from MSLayerGroup and MSSymbolInstance\n    //See type conversions at the beginning of treeParseName\n    if (!isCustomClass && !isSupportedLayer(layer)){\n        //we have an unsupported type => render it as an image\n        treeForceImageExport(layer, currentXMLElement, rootDirPath, imagesSubDir, name, type);\n        renderingAsImage = true;\n    }\n    \n    //handle images with no export by manually generating image\n    if ((type == \"MSBitmapLayer\") && layer.exportFormats && (layer.exportFormats.length == 0)){\n        //we have an unsupported type => render it as an image\n        treeForceImageExport(layer, currentXMLElement, rootDirPath, imagesSubDir, name, type);\n        //log(\"force export on image \" + layer.name);\n        renderingAsImage = true;\n    }\n\n    if (renderingAsImage){\n        Xml.xmlAddAttributesToElement(currentXMLElement, attributes);\n        return true;\n    }\n    \n    //exports\n    let hasExports = false;\n    // NB: we don't want to export artboards or symbol masters as images\n    if (layer.exportFormats && (layer.exportFormats.length > 0) && canExportTypeAsImage(type)) {\n        hasExports = treeAddImageExport(name, layer, currentXMLElement, rootDirPath, imagesSubDir);\n    }\n\n    if (hasExports){\n        //this part of the tree will be rendered as an image\n        //=> add already collected elements and return now\n        Xml.xmlAddAttributesToElement(currentXMLElement, attributes);\n        //log(\"abort style inspection because layer has exports (\" + layer.name + \")\");\n        return true;\n    }\n    \n    //style\n    if (type == \"MSArtboardGroup\" || type == \"MSLayerGroup\" || type == \"MSShapeGroup\"\n        || type == \"MSOvalShape\" || type == \"MSRectangleShape\" || type == \"MSPolygonShape\" || type == \"MSStarShape\" || type == \"MSTriangleShape\"\n        || type == \"MSShapePathLayer\" || type == \"MSBitmapLayer\" || type == \"MSTextLayer\" || type == \"MSSliceLayer\"\n        || isCustomClass){\n\n        let style = layer.style;\n        if (style) {\n            if (type == \"MSTextLayer\") {\n                if (layer.sharedStyle) {\n                    attributes.push(\"useSharedStyle\");\n                    attributes.push(1);\n                    attributes.push(\"sharedStyleId\");\n                    attributes.push(layer.sharedStyleId);\n    \n                    if (layer.sketchObject.isSharedStyleOutOfSync()) {\n                        attributes.push(\"isSharedStyleOutOfSync\");\n                        attributes.push(1);\n                        treeAddAttributesFromTextStyle(currentXMLElement, layer, layer.sharedStyle);\n                    } else {\n                        // textBehaviour is not defined by shared styles\n                        treeAddTextBehaviour(currentXMLElement, layer);\n                    }\n                } \n                else {\n                    treeAddAttributesFromTextStyle(currentXMLElement, layer, null);\n                }\n            }\n            else {\n                if (layer.sharedStyle) {\n                    attributes.push(\"useSharedStyle\");\n                    attributes.push(1);\n                } \n                treeAddAttributesFromLayerStyle(currentXMLElement, type, style);\n            }\n        }\n    }\n    \n    //points\n    if (type == \"MSShapePathLayer\" || type == \"MSOvalShape\" || type == \"MSRectangleShape\" || type == \"MSPolygonShape\" || type == \"MSStarShape\" || type == \"MSTriangleShape\" || type == \"MSShapeGroup\"){\n        attributes.push(\"shapeType\");\n        attributes.push(layer.shapeType);\n        attributes.push(\"closed\");\n        if (layer.closed){\n            attributes.push(\"1\");\n        }else{\n            attributes.push(\"0\");\n        }\n        let points = layer.points;\n        if (points){\n            points.forEach(point => {\n                treeAddAttributesFromPointData(currentXMLElement, point);\n            });\n        }\n    }\n    \n    //specific attributes per type\n    if (type == \"MSTextLayer\"){\n        let text = layer.text;\n        if (text){\n           Xml.xmlAddElement(currentXMLElement, \"content\", null, escapeCharactersInUnicodePrivateUseArea(text));\n        }\n    } else if (type == \"MSArtboardGroup\"){\n        if (layer.background && layer.background.enabled && layer.background.includedInExport){\n            attributes.push(\"hasBackground\");\n            attributes.push(\"1\");\n            attributes.push(\"backgroundColor\");\n            attributes.push(getBackgroundColorAsHexValueOrSwatchReference(layer));        \n        }        \n    }\n    \n    Xml.xmlAddAttributesToElement(currentXMLElement, attributes);\n    return false;\n}\n\n\nfunction treeForceImageExport(layer, currentXMLElement, rootDirPath, imagesSubDir, name, type){\n    let Xml = require(\"./xml.js\");\n    let Utils = require(\"./utils.js\");\n\n    if (!rootDirPath.endsWith(\"/\")) {\n        rootDirPath += \"/\";\n    }\n\n    if ((imagesSubDir.length > 0) && !imagesSubDir.endsWith(\"/\")) {\n        imagesSubDir += \"/\";\n    }\n\n    let exportPath = rootDirPath + imagesSubDir;\n\n    //NB: strange behavior - layer.id is undefined is we try to build a string BUT exists if we use console.log\n    //let toto  = layer.id;console.log(\"Exists \" + layer.id + \" -- \" + toto);\n    // We add our objectID to avoid conflict between different symbols and/or artboards\n    name = name + \"__\" + layer.sketchObject.objectID();\n\n\n    // NB: Sketch fails to generate big images. Thus, we must ensure that we don't try to export big images\n    let numberOfImages = 1;\n    let layerWidth = layer.frame.width;\n    let layerHeight = layer.frame.height;\n    for (let currentAtN = 2; currentAtN <= numberOfImagesPerLayerExport; currentAtN++) {\n        if (\n            ((layerWidth * currentAtN) > maximumImageWidthOrHeight)\n            ||\n            ((layerHeight * currentAtN) > maximumImageWidthOrHeight)\n            )\n            {\n                break;\n            }\n        numberOfImages = currentAtN;\n    }\n\n\n    let insets = Utils.exportLayerAsPNG(layer, numberOfImages, exportPath, name, false, false);\n\n    Xml.xmlAddAttributesToElement(currentXMLElement, [\"hasExport\", numberOfImages, \n                                                  \"type\", \"image\", \n                                                  \"opacity\", layer.style.opacity,\n                                                  \"topInset\", Utils.roundBy(insets[0], 0.5), \n                                                  \"bottomInset\", Utils.roundBy(insets[1], 0.5), \n                                                  \"leftInset\", Utils.roundBy(insets[2], 0.5),  \n                                                  \"rightInset\", Utils.roundBy(insets[3], 0.5)\n                                                 ]);\n\n    for (let currentAtN = 1; currentAtN <= numberOfImages; currentAtN++) {\n        let exportAttr = [];\n        let fileName = name + ((currentAtN !== 1) ? \"@\" + currentAtN + \"x\" : \"\") + \".png\";\n\n        exportAttr.push(\"format\");\n        exportAttr.push(\"png\");\n        exportAttr.push(\"size\");\n        exportAttr.push(currentAtN + \"x\");\n        exportAttr.push(\"prefix\");\n        exportAttr.push(\"\");\n        exportAttr.push(\"suffix\");\n        exportAttr.push((currentAtN !== 1) ? \"@\" + currentAtN + \"x\" : \"\");\n        exportAttr.push(\"file\");\n        exportAttr.push(imagesSubDir + fileName);\n\n       Xml.xmlAddElement(currentXMLElement, \"export\", exportAttr, null);\n    }\n}\n\n\nfunction treeAddImageExport(name, layer, currentXMLElement, rootDirPath, imagesSubDir){\n    let succeeded = false;\n\n    if (layer.exportFormats.length > 0) \n    {\n        let Xml = require(\"./xml.js\");\n        let Utils = require(\"./utils.js\");\n\n        if (!rootDirPath.endsWith(\"/\")) {\n            rootDirPath += \"/\";\n        }\n    \n        if ((imagesSubDir.length > 0) && !imagesSubDir.endsWith(\"/\")) {\n            imagesSubDir += \"/\";\n        }\n\n        let exportPath = rootDirPath + imagesSubDir;\n        // We add our objectID to avoid conflict between different symbols and/or artboards\n        name = name + \"__\" + layer.sketchObject.objectID(); \n\n        let insets = Utils.exportLayerWithUserDefinedExportOptions(layer, exportPath, name, false, false);\n\n        Xml.xmlAddAttributesToElement(currentXMLElement, [\"hasExport\", layer.exportFormats.length, \n                                                      \"type\", \"image\",  //force type as image\n                                                      \"opacity\", layer.style.opacity,\n                                                      \"topInset\", insets[0], \"bottomInset\", insets[1], \n                                                      \"leftInset\", insets[2], \"rightInset\", insets[3]\n                                                     ]);\n\n        layer.exportFormats.forEach(format => {\n            let exportFormat = format.sketchObject;\n            \n            let fileName = MSExportFormat.exportableFilenameForLayerName_exportFormat(name, exportFormat);\n\n            let sizeText = format.size;\n            let fileFormat = format.fileFormat;\n            let prefix = (format.prefix) ? format.prefix : \"\";\n            let suffix = (format.suffix) ? format.suffix : \"\";\n        \n            let exportAttr = [];\n            exportAttr.push(\"format\");\n            exportAttr.push(fileFormat);\n            exportAttr.push(\"size\");\n            exportAttr.push(sizeText);\n            exportAttr.push(\"prefix\");\n            exportAttr.push(prefix);\n            exportAttr.push(\"suffix\");\n            exportAttr.push(suffix);\n            exportAttr.push(\"file\");\n            exportAttr.push(imagesSubDir + fileName);\n            \n           Xml.xmlAddElement(currentXMLElement, \"export\", exportAttr, null);\n        });\n\n\n        succeeded = true;\n    }\n\n    return succeeded;\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TREE INDEXING\n\n\n/*\nWe use names to add metadata inside Sketch objects.\nHere is the syntax:\nactualName -> actualType |key1|value1|key2|value2|...\nThis function returns an array with:\n- XML beacon name serving as type\n- element name\n- set of keys and values (possibly empty and possibly including legacy class information)\n*/\nfunction treeAddLayerInGlobalNamesIndex(layer, documentContext, layerNamesUnicityByContext, layersStack, contextStack){\n    let type = layer.sketchObject.class();\n\n    //extracting keys and values\n    let elements = layer.name.split(\"|\");\n    let nameAndType = elements.shift().split(\"->\");\n\n    let actualType = \"\" + type;\n    let useActualNameAsType = false;\n    let extractedTypeIsParentType = false;\n    if (type == \"MSLayerGroup\" || type == \"MSShapeGroup\"){\n        actualType = \"group\";\n    }else if (type == \"MSBitmapLayer\"){\n        actualType = \"image\";\n    }else if (type == \"MSRectangleShape\"){\n        actualType = \"rectangle\";\n    }else if (type == \"MSOvalShape\"){\n        actualType = \"oval\";\n    }else if (type == \"MSShapePathLayer\"){\n        if (isLine(layer)) {\n            actualType = \"line\";\n        }\n        //TODO: path\n    }else if (type == \"MSTextLayer\"){\n        actualType = \"text\";\n    }else if (type == \"MSArtboardGroup\"){\n        actualType = \"window\";\n        extractedTypeIsParentType = true;\n    }else if (type == \"MSSymbolMaster\"){\n        useActualNameAsType = true;\n        extractedTypeIsParentType = true;\n    }\n\n    let rawName;\n    let parentType = null;\n    if (nameAndType.length == 1){ //no type specified in name\n        rawName = nameAndType[0].trim();\n    } else if (nameAndType.length == 2){ //type is specified in name\n        rawName = nameAndType[0].trim();\n        let extractedType = nameAndType[1].trim();\n        if (extractedTypeIsParentType){\n            parentType = extractedType;\n        } else {\n            actualType = extractedType;\n        }\n    } else { //name is empty\n        log(\"treeAddLayerInGlobalNamesIndex: format error in layer's name - \" + layer.name);\n        return;\n    }\n    \n    //TODO: not only clean rawName but all captured elements\n\n    //clean possible forbidden characters\n    rawName = rawName.replace(/[^a-zA-Z0-9\\s]/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n\n    if (rawName.match(/^\\d/)) {\n        rawName = \"n \" + rawName;\n    }\n\n    if (rawName.length == 0) {\n        rawName = \"invalidName\";\n    } else if (forbiddenNames.includes(rawName.toLowerCase())) {\n        rawName = \"n \" + rawName;\n    }\n\n\n    let contextKey = contextStack[0];\n    let localLayerNamesUnicityHash = layerNamesUnicityByContext[contextKey];\n\n    /*\n     Ensure name unicity\n     We manage a stack of context (contextStack) because, in the end,\n     we define QML files and we want id unicity in each QML file. \n     This optimization avoids useless suffix addition to layer names and thus makes generated code clearer.\n     */\n    //log(\"checking \" + rawName + \"(\" + contextKey + \")\");\n    let actualName = rawName;\n    let counter = 0;\n    let hashKey = camelize(actualName).toLowerCase();\n\n    if (localLayerNamesUnicityHash.hasOwnProperty(hashKey)){\n        counter = localLayerNamesUnicityHash[hashKey] + 1;\n        while (localLayerNamesUnicityHash.hasOwnProperty(hashKey + \" i\" + counter)) {\n            counter++;\n        }\n\n        actualName = actualName + \" i\" + counter;\n        localLayerNamesUnicityHash[camelize(actualName).toLowerCase()] = 1;\n    } else {\n        counter = 1;\n    }\n    localLayerNamesUnicityHash[hashKey] = counter;\n\n    if (useActualNameAsType) {\n        actualType = actualName;\n    }\n    \n    actualType = actualType.trim();\n    actualName = lowerCaseFirstCharater(actualName);\n\n    if (elements.length %2 !== 0) {\n        //NB: we arbitrarily remove the last element to get an even number\n        elements.pop();\n        log(\"treeAddLayerInGlobalNamesIndex: odd number of key-values in layer's name - \" + layer.name);\n    }\n\n    documentContext.globalNamesIndex[layer.id] = [actualName, \n                                                  actualType,\n                                                  elements, \n                                                  rawName,\n                                                  parentType];\n\n    if ((type == \"MSTextLayer\") && layer.sharedStyle && layer.sketchObject.isSharedStyleOutOfSync()) {\n        documentContext.textsWithOutOfSyncStyle[layer.id] = true;\n    }\n\n    if ((type == \"MSSymbolMaster\") || (type == \"MSArtboardGroup\")) {\n        let layerId = layer.id;\n        layerNamesUnicityByContext[layerId] = {};\n        contextStack.unshift(layerId);\n        layersStack.unshift(\"endOfContextScope\");\n    } \n\n    //exclude hidden layers and layers rendered as images\n    if (\n        !(layer.exportFormats && (layer.exportFormats.length > 0) && canExportTypeAsImage(type))\n        && !layer.hidden \n        &&  (type == \"MSArtboardGroup\" || type == \"MSLayerGroup\" || type == \"MSShapeGroup\" || type == \"MSSymbolMaster\")\n        ) {\n        for (let i = 0; layer.layers && i < layer.layers.length; i++) {\n            layersStack.unshift(layer.layers[i].id);\n        }\n    }\n}\n\n\nfunction treePopulateGlobalNamesIndex(documentContext){\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n    let layerNamesUnicityByContext = {};\n    let layersStack = [];\n    \n    document.pages.forEach(page => {\n        if (page.name.startsWith(\"#\")) {\n            // Special case: we don't want to export this page\n            // BUT it may contain relevant information (symbol masters)\n            // that are required to export the content of other pages\n            page.layers.forEach(layer => {\n                let type = layer.sketchObject.class();\n                if (type ==  \"MSSymbolMaster\")\n                    layersStack.unshift(layer.id);\n            });\n        }\n        else {\n            page.layers.forEach(layer => {\n                let type = layer.sketchObject.class();\n                if (\n                     // We don't want to export slices and hotspots\n                     ((type != \"MSSliceLayer\") && (type != \"MSHotspotLayer\")) \n                     &&\n                     // We don't want to export \"private\" layers, BUT we need to list\n                     // all symbol masters to define overrides\n                     (!layer.name.startsWith(\"#\") || (type ==  \"MSSymbolMaster\"))\n                    )\n                {\n                    layersStack.unshift(layer.id);\n                }\n            });\n        }\n    });\n\n    let rootKey = \"DocumentRoot\";\n    let contextStack = [rootKey];\n    layerNamesUnicityByContext[rootKey] = {};\n    while (layersStack.length > 0) {\n        let myId = layersStack.shift();\n        if (myId == \"endOfContextScope\"){\n            let layerId = contextStack.shift();\n            delete layerNamesUnicityByContext[layerId];\n            continue;\n        }\n\n        let layer = document.getLayerWithID(myId);\n        if (layer)\n            treeAddLayerInGlobalNamesIndex(layer, documentContext, layerNamesUnicityByContext, layersStack, contextStack);\n    }\n}\n\n\nfunction treeBuildOverrideTargetPath(overR, globalNamesIndex){\n    let elmts = overR.path.split(\"/\");\n    let result = \"\";\n    for (let i = 0; i < elmts.length; i++){\n        let index = elmts[i];\n        if (globalNamesIndex[index]){\n            let str = camelize(getUniqueNameFromIndexedData(globalNamesIndex[index]));\n            result = result + str + ((i + 1 < elmts.length) ? \".\" : \"\");\n        }else{\n            log(\"undefined index on overriden layer \" + overR.affectedLayer.name + \" that may also be exportable\")\n        }\n    }\n    return result;\n}\n\n\nfunction addFontFilesToXml(xmlParent, rootDirPath, fontsSubDir, fontFiles, excludeSystemFonts) {\n    if (xmlParent && fontFiles && (fontFiles.length > 0)) {\n        let Xml = require(\"./xml.js\");\n        let Utils = require(\"./utils.js\");\n\n        if (!rootDirPath.endsWith(\"/\")) {\n            rootDirPath += \"/\";\n        }\n\n        if ((fontsSubDir.length > 0) && !fontsSubDir.endsWith(\"/\")) {\n            fontsSubDir += \"/\";\n        }\n\n        let exportPath = rootDirPath + fontsSubDir;\n        Utils.createDirectoryIfNeeded(exportPath);\n\n        let fontFileNames = [];\n        fontFiles.sort().forEach(fontFilePath => {\n            if (!excludeSystemFonts || !fontFilePath.startsWith(\"/System/Library/Fonts\")) {\n                let fileName = fontFilePath.substring(fontFilePath.lastIndexOf('/') + 1);\n                if (!fontFileNames.includes(fileName)) {\n                    fontFileNames.push(fileName);\n                   Xml.xmlAddElement(xmlParent, \"font\", [\"name\", fileName.replace(/\\.[^/.]+$/, \"\"), \"file\",  fontsSubDir + fileName], null);\n                    Utils.copyFile(fontFilePath, exportPath + fileName);\n                }\n            } \n        });\n    }\n}\n\n\nfunction validSwatchName(rawName, colorNames) {\n    let name = rawName.replace(/[^a-zA-Z0-9_]/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n    if (name.match(/^\\d/))\n        name = \"swatch \" + name;\n            \n    if (name.length == 0) {\n        name = \"swatch \" + color.replace(/#/g, '');\n    } else if (forbiddenNames.includes(name.toLowerCase())) {\n        name = \"swatch \" + name;\n    }\n\n    let validName = name;\n    if (colorNames.has(validName.toLowerCase())) {\n        let index = colorNames.get(validName.toLowerCase());\n        validName = name + \" i\" + (++index);\n\n        while (colorNames.has(validName.toLowerCase())) {\n            validName = name + \" i\" + (++index);\n        }\n\n        colorNames.set(name.toLowerCase(), index);\n    }\n\n    validName = lowerCaseFirstCharater(validName);\n    colorNames.set(validName.toLowerCase(), 0);\n\n    return validName;\n}\n\n\nfunction addColorVariablesToXml(xmlParent) {\n    let sketch = require('sketch/dom');\n    if (sketch.version.sketch >= 69) {\n        let Xml = require(\"./xml.js\");\n\n        let colorNames = new Map();\n        let document = sketch.getSelectedDocument();\n\n        let swatchesData = [];\n\n        // V1: swatches defined by our document\n        /*\n        document.swatches.forEach(swatch => {\n            let color = rgbaToArgbOrRgb(swatch.color);\n            let validName = validSwatchName(swatch.name, colorNames);\n  \n            swatchesData.push({id: swatch.sketchObject.objectID(), name: validName, color: color});\n        });\n        */\n\n        // V2: document swatches and imported swatches\n        let usedNativeSwatches = document.sketchObject.documentData().allSwatches();\n        if (usedNativeSwatches.length > 0) {\n            usedNativeSwatches.forEach(nativeSwatch => {\n                let swatch = sketch.fromNative(nativeSwatch);\n\n                let color = rgbaToArgbOrRgb(swatch.color);\n                let validName = validSwatchName(swatch.name, colorNames);\n\n                swatchesData.push({id: swatch.sketchObject.objectID(), name: validName, color: color});\n            });\n        }\n\n\n        // Add missing swatches\n        for (const key in TEMP_CONTEXT.missingSwatches) {\n            let color = TEMP_CONTEXT.missingSwatches[key];\n            let validName = validSwatchName(\"missingSwatch \" + color, colorNames);\n            log(\"Adding missing swatch \" + key + \" with name '\" + validName + \"' (color: \" + color + \")\");\n            swatchesData.push({id: key, name: validName, color: color});\n        }\n\n        // Sort swatches by name before exporting them\n        swatchesData.sort((a, b) => {\n            return ((a.name !== b.name) ? ((a.name < b.name) ? -1 : 1) : 0); // NB: faster than a.name.localCompare(b.name)\n        }).forEach(swatchData => {\n           Xml.xmlAddElement(xmlParent, \"swatch\", [\"id\", swatchData.id, \"name\", swatchData.name, \"color\", swatchData.color], null);\n        });\n\n    } else {\n        console.warn(\"addColorVariablesToXml: can not export color variables - Sketch \" + sketch.version.sketch + \" is too old (required version is 69 or newer)\")\n    }\n}\n\n\nfunction addSharedTextStylesToXml(xmlParent) {\n    let Xml = require(\"./xml.js\");\n    let sketch = require('sketch/dom');\n    let document = sketch.getSelectedDocument();\n\n    let styleNames = new Map();\n    let stylesData = [];\n\n    // Step 1: get data of all text styles\n    document.sharedTextStyles.forEach(sharedTextStyle => {\n        let name = sharedTextStyle.name.replace(/[^a-zA-Z0-9_]/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n        if (name.match(/^\\d/))\n            name = \"textStyle \" + name;\n        \n        if (name.length == 0) {\n            name = \"textStyle\";\n        } else if (forbiddenNames.includes(name.toLowerCase())) {\n            name = \"textStyle \" + name;\n        }\n\n        let validName = name;\n        if (styleNames.has(validName.toLowerCase())) {\n            let index = styleNames.get(validName.toLowerCase());\n            validName = name + \" i\" + (++index);\n\n            while (styleNames.has(validName.toLowerCase())) {\n                validName = name + \" i\" + (++index);\n            }\n\n            styleNames.set(name.toLowerCase(), index);\n        }\n        \n        validName = lowerCaseFirstCharater(validName);\n        styleNames.set(validName.toLowerCase(), 0);\n\n        stylesData.push({id: sharedTextStyle.id, name: validName, sharedTextStyle: sharedTextStyle});\n    });\n\n    // Step 2: export text styles\n    stylesData.sort((a, b) => {\n        return ((a.name !== b.name) ? ((a.name < b.name) ? -1 : 1) : 0); // NB: faster than a.name.localCompare(b.name)\n    }).forEach(textStyleData => {\n        let sharedTextStyleXml =Xml.xmlAddElement(xmlParent, \"sharedtextstyle\", [\"id\", textStyleData.id, \"name\", textStyleData.name], null);\n        treeAddAttributesFromTextStyle(sharedTextStyleXml, textStyleData.sharedTextStyle, null);\n    });\n}\n\n\nfunction camelize(str) {\n    str = removeDiacritics(str);\n    str = str.replace(/[^a-zA-Z0-9\\-_\\s]/g, \"\")\n    str = str.trim();\n\n    if (firstCharIsInvalid(str))\n      str = \"n\" + str;\n\n    return str.replace(/^([A-Z])|[\\-_\\s]+(\\w)/g, function(match, p1, p2, offset) {\n        if (p2) return p2.toUpperCase();\n        return p1.toLowerCase();\n    });\n}\n\nfunction pascalize(str) {\n    return capitalize(camelize(str));\n}\n\n\nfunction firstCharIsInvalid(str) {\n    return ((str.length > 0) && /[^a-z_]/i.test(str.charAt(0)));\n}\n\n\nfunction removeDiacritics (str) {\n    return Object.keys(diacriticsMap).reduce(function (str, key) {\n        let replaceRegexp = diacriticsMap[key];\n        return str.replace(replaceRegexp, key)\n      }, str);\n}\n\n\nfunction capitalize(str) {\n  if (typeof str !== 'string') return '';\n  std = str.trim();\n  if (str.length === 0) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n\nfunction lowerCaseFirstCharater(str) {\n    return (str ? str[0].toLowerCase() + str.slice(1) : \"\");\n}\n\n\nfunction escapeCharactersInUnicodePrivateUseArea(str) {\n    // NB: escape special characters used by custom icon fonts generated by Fontello\n    //     see https://www.compart.com/fr/unicode/block/U+E000\n    return str.replace(/[\\uE000-\\uF8FF]/gu, function (c) {\n      return \"\\\\u\" + (\"000\" + c.charCodeAt().toString(16)).slice(-4)\n    });\n}\n\n\nfunction fontPostscriptNameFromStyle(style) {\n    if (!style || !style.sketchObject)\n        return null;\n\n    return style.sketchObject.textStyle().fontPostscriptName();\n}\n\n\nfunction fontStyleNameFromStyle(style) {\n    if (!style || !style.sketchObject)\n        return null;\n\n    let fontDisplayName = style.sketchObject.textStyle().attributes().NSFont.displayName();\n    let fontStyleName = fontDisplayName.replace(style.fontFamily, \"\").trim();\n    if (fontStyleName === \"\")\n        fontStyleName = \"Regular\";\n\n    return fontStyleName;\n}\n\n\nfunction getFillColorAsHexValueOrSwatchReference(fill) {\n    if (fill.sketchObject) {\n        return mscolorToHexValueOrSwatchReference(fill.sketchObject.color());\n    }\n    else {\n        return rgbaToArgbOrRgb(fill.color);\n    }\n}\n\n\nfunction getTextColorAsHexValueOrSwatchReference(style) {\n    if (style.sketchObject && style.sketchObject.textStyle() && style.sketchObject.textStyle().attributes() \n        && style.sketchObject.textStyle().attributes().MSAttributedStringColorAttribute) {\n        return mscolorToHexValueOrSwatchReference(style.sketchObject.textStyle().attributes().MSAttributedStringColorAttribute);\n    } else {\n       return rgbaToArgb(style.textColor);\n    }\n}\n\n\nfunction getBackgroundColorAsHexValueOrSwatchReference(layer) {\n    if (layer.sketchObject) {\n        return mscolorToHexValueOrSwatchReference(layer.sketchObject.backgroundColor());\n    } else {\n        return rgbaToArgbOrRgb(layer.background.color);\n    }\n}\n\n\nfunction mscolorToHexValueOrSwatchReference(mscolor) {\n    let swatchID = mscolor.swatchID();\n    if (swatchID) {\n        let key = String(swatchID);\n        if (!TEMP_CONTEXT.availableSwatchIDs.includes(key)) {\n            if (!TEMP_CONTEXT.missingSwatches.hasOwnProperty(key)) {\n                let color = mscolorToArgbOrRgb(mscolor);\n                log(\"Swatch with ID \" + key + \" not found (color: \" + color + \"). Please check that all named colors are imported\");\n                TEMP_CONTEXT.missingSwatches[key] = color;\n            }\n        }\n\n        return \"swatch(\" + swatchID + \")\";\n    } else {\n        return mscolorToArgbOrRgb(mscolor);\n    }\n}\n\n\nfunction mscolorToArgbOrRgb(mscolor) {\n    return rgbaToArgbOrRgb(\n        \"#\" +mscolor.immutableModelObject().hexValue() \n        + (\"0\" + Math.round(mscolor.alpha() * 255).toString(16).toUpperCase()).slice(-2)\n    );\n}\n\n\nfunction rgbaToArgb(color){\n    return color.replace(/#(......)(..)/, '#$2$1');\n}\n\n\nfunction rgbaToArgbOrRgb(color){\n    if (color.slice(-2).toUpperCase() === \"FF\") {\n        return color.slice(0, -2);\n    } else {\n        return rgbaToArgb(color);\n    }\n}\n\n\nfunction layerTextBehaviour(layer) {\n    if (!isTextLayer(layer))\n        return \"\";\n\n    let textBehaviourValue = layer.sketchObject.textBehaviour();\n    if (textBehaviourValue == 0) {\n        return \"autoWidth\";\n    } else if (textBehaviourValue == 1) {\n        return \"autoHeight\";\n    } else {\n        return \"fixedSize\";\n    }\n}\n\n\nfunction layerFontFilePath(layer) {\n    return ((layer && isTextLayer(layer)) ? styleFontFilePath(layer.style) : null);\n}\n\n\nfunction styleFontFilePath(style) {\n    let fontFilePath = null;\n\n    if (style && style.sketchObject) {\n        let nsFont = style.sketchObject.textStyle().attributes().NSFont;\n        if (nsFont) {\n            let urlAttribute = nsFont.fontDescriptor().objectForKey(\"NSCTFontFileURLAttribute\");\n            if (urlAttribute) {\n                fontFilePath = String(urlAttribute.path());\n            }\n        }\n    } \n\n    return fontFilePath;\n}\n\n\nfunction canExportTypeAsImage(type) {\n    return ((type != \"MSArtboardGroup\") && (type != \"MSSymbolMaster\"));\n}\n\n\nfunction isLayerGroup(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSLayerGroup.class()) \n            && !layer.sketchObject.isKindOfClass(MSShapeGroup.class()));\n}\n\n\nfunction isBitmapLayer(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSBitmapLayer.class()));\n}\n\n\nfunction isTextLayer(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSTextLayer.class()));\n}\n\n\nfunction isShapeLayer(layer) {\n    return (layer && layer.sketchObject \n            && (\n                layer.sketchObject.isKindOfClass(MSRectangleShape.class())  \n                || \n                layer.sketchObject.isKindOfClass(MSOvalShape.class())  \n                ||\n                layer.sketchObject.isKindOfClass(MSPolygonShape.class())  \n                ||\n                layer.sketchObject.isKindOfClass(MSStarShape.class())  \n                ||\n                layer.sketchObject.isKindOfClass(MSTriangleShape.class())  \n                ||\n                layer.sketchObject.isKindOfClass(MSShapePathLayer.class())\n               ) \n            );\n}\n\n\nfunction isRectangleShape(layer) {\n    return (layer && layer.sketchObject.isKindOfClass(MSRectangleShape.class()) && layer.sketchObject.isRectangle());\n    /*\n            && layer.points && (layer.points.length == 4)\n            && (layer.points[0].pointType == \"Straight\") && (layer.points[0].point.x == 0) && (layer.points[0].point.y == 0)\n            && (layer.points[1].pointType == \"Straight\") && (layer.points[1].point.x == 1) && (layer.points[1].point.y == 0)\n            && (layer.points[2].pointType == \"Straight\") && (layer.points[2].point.x == 1) && (layer.points[2].point.y == 1)\n            && (layer.points[3].pointType == \"Straight\") && (layer.points[3].point.x == 0) && (layer.points[3].point.y == 1)\n            );\n    */        \n}\n\n\nfunction isOvalShape(layer) {\n    return (layer && layer.sketchObject.isKindOfClass(MSOvalShape.class()));\n}\n\n\nfunction isLine(layer) {\n    return (\n            layer && layer.sketchObject \n            && layer.sketchObject.isKindOfClass(MSShapePathLayer.class())\n            && (layer.shapeType == \"Custom\") && (layer.points.length == 2)\n            );\n};\n\n\nfunction isSliceLayer(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSSliceLayer.class()));\n}\n\n\nfunction isArtboard(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSArtboardGroup.class()));\n}\n\n\nfunction isSymbolMaster(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSSymbolMaster.class()));\n}\n\n\nfunction isSymbolInstance(layer) {\n    return (layer && layer.sketchObject && layer.sketchObject.isKindOfClass(MSSymbolInstance.class()));\n}\n\n\nfunction isSupportedLayer(layer) {\n    return (\n            isTextLayer(layer) || isBitmapLayer(layer) \n            || (\n                 (isRectangleShape(layer) || isOvalShape(layer) || isLine(layer))\n                 && \n                 isSupportedShapeStyle(layer.style)\n                )\n            || isLayerGroup(layer) \n            || isArtboard(layer) || isSymbolInstance(layer)\n            );\n}\n\n\nfunction isSupportedShapeStyle(style) {\n    let isSupported = true;\n\n    if (style) {\n        isSupported = (\n                       !(style.blur.enabled)\n                       &&\n                       (style.shadows.filter(item => { return item.enabled; }).length == 0)\n                       &&\n                       (style.innerShadows.filter(item => { return item.enabled; }).length == 0)\n                      );\n\n        if (isSupported) {\n            let activeItems = style.fills.filter(item => { return item.enabled; });\n            let numberOfActiveItems = activeItems.length;\n            if (numberOfActiveItems > 0) {\n                let lastItem = activeItems[numberOfActiveItems - 1];\n                isSupported = (\n                               (lastItem.fillType == \"Color\")\n                               &&\n                               ((numberOfActiveItems == 1) || (lastItem.color.slice(-2) === \"ff\")) // \"ff\" => fill is opaque\n                               );\n            }\n        }\n\n        if (isSupported) {\n            let activeItems = style.borders.filter(item => { return item.enabled; });\n            let numberOfActiveItems = activeItems.length;\n            if (numberOfActiveItems > 0) {\n                let lastItem = activeItems[numberOfActiveItems - 1];\n                isSupported = (\n                               (lastItem.fillType == \"Color\")\n                               && \n                               (numberOfActiveItems == 1)\n                              );            \n            }\n        }\n    }\n\n    return isSupported;\n}\n\n\nmodule.exports = {\n    addColorVariablesToXml,\n    addFontFilesToXml,\n    addSharedTextStylesToXml,\n    clearTempContext,\n    getBackgroundColorAsHexValueOrSwatchReference,\n    getFontFilesUsedByLayer,\n    getKeyValuesFromIndexedData,\n    getParentTypeFromIndexedData,\n    getTypeFromIndexedData,\n    getUniqueNameFromIndexedData,\n    initDocumentContext,\n    pascalize,\n    treeIterateLayers,\n    addSymbolMasterOverridesToXml\n};","let Utils = {};\n\n\n//NB: Sound files in /System/Library/Sounds\nUtils.Sounds = {\n    Basso: \"Basso\",\n    Blow: \"Blow\",\n    Bottle: \"Bottle\",\n    Frog: \"Frog\",\n    Funk: \"Funk\",\n    Glass: \"Glass\",\n    Hero: \"Hero\",\n    Morse: \"Morse\",\n    Ping: \"Ping\",\n    Pop: \"Pop\",\n    Purr: \"Purr\",\n    Sosumi: \"Sosumi\",\n    Submarine: \"Submarine\",\n    Tink: \"Tink\"\n};\n\n\nUtils.playSoundNamed = function(name) {\n    let sound = NSSound.soundNamed(name);\n    if (sound) \n        sound.play();\n};\n\n\nUtils.chooseFolder = function() {\n    let panel = NSOpenPanel.openPanel();\n    panel.setCanChooseDirectories(true);\n    panel.setCanChooseFiles(false);\n    panel.setCanCreateDirectories(true);\n    \n    if (panel.runModal() == NSModalResponseOK) \n    {\n        let path = panel.URL().path();\n        if (0 == path.indexOf(\"file://\")) \n        {\n            //remove the file:// path from string\n            path = path.substring(7);\n        }\n\n        if (!path.endsWith(\"/\"))\n            path += \"/\";\n\n        return path;\n    }\n    else\n    {\n        return null;\n    }\n};\n\n\nUtils.showDialog = function(message) {\n    let app = NSApplication.sharedApplication();\n    if (app)\n        app.displayDialog_withTitle(message, \"Sketch2QML\");\n};\n\n\nUtils.showInFinder = function(directoryPathOrFilePath) {\n    let errorPointer = MOPointer.alloc().init();\n    let fileManager = NSFileManager.defaultManager();\n    let result = fileManager.attributesOfItemAtPath_error(directoryPathOrFilePath, errorPointer);\n    if (result)\n    {\n        if (result.isDirectory()) \n            NSWorkspace.sharedWorkspace().openFile_withApplication(directoryPathOrFilePath, \"Finder\");\n        else \n            NSWorkspace.sharedWorkspace().selectFile_inFileViewerRootedAtPath(directoryPathOrFilePath, nil);\n    }\n    else\n        console.warn(\"Utils.showInFinder: \" + directoryPathOrFilePath + \" does not exist or can't be read\");\n};\n\n\nUtils.runCommand = function (command, args, currentDirectoryPath) {\n    var task = NSTask.alloc().init();\n    task.setLaunchPath_(command);\n    if (currentDirectoryPath)\n        task.setCurrentDirectoryPath(currentDirectoryPath);\n    \n    task.arguments = args;\n    task.launch();\n    task.waitUntilExit();\n    return (task.terminationStatus() == 0)\n};\n\n\nUtils.copyFile = function (source, destination) {\n    const manager = NSFileManager.defaultManager();\n    if (manager.fileExistsAtPath(source))\n        manager.copyItemAtPath_toPath_error(source, destination, null);\n    else\n        console.warn(\"Utils.copyFile: file '\" + source + \"` does not exist\");\n};\n\n\nUtils.fileExists = function (filePath) {\n    return NSFileManager.defaultManager().fileExistsAtPath(filePath);\n};\n\n\nUtils.expandTildeInPath = function (filePath) {\n    return String(NSString.stringWithString(filePath).stringByExpandingTildeInPath());\n};\n\n\nUtils.createDirectoryIfNeeded = function(path) {\n    const manager = NSFileManager.defaultManager();\n    if (manager.fileExistsAtPath(path)) {\n        return true;\n    } else {\n        if (manager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, true, nil, nil)) {\n            return true;\n        } else {\n            console.warn(\"Utils.createDirectoryIfNeeded: failed to create directory \" + path);\n            return false;\n        }\n    }\n};\n\n\nUtils.forceNewDirectory = function(path) {\n    const manager = NSFileManager.defaultManager();\n    if (manager.fileExistsAtPath(path)) {\n        manager.removeItemAtPath_error(path, nil);\n    }\n        \n    if (manager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, true, nil, nil)) {\n        return true;\n    } else {\n        console.warn(\"Utils.forceNewDirectory: failed to create directory \" + path);\n        return false;\n    }\n};\n\n\nUtils.roundWithDecimalPrecision = function (value, precision){\n    let multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier)/multiplier;\n};\n\n\nUtils.roundBy = function(value, rounder) {\n    let multiplier = 1/(rounder || 0.5);\n    return Math.round(value * multiplier)/multiplier;\n}\n\n\nUtils.isLine = function(layer) {\n    return (\n            layer && layer.sketchObject \n            && layer.sketchObject.isKindOfClass(MSShapePathLayer.class())\n            && (layer.shapeType == \"Custom\") && (layer.points.length == 2)\n            );\n};\n\n\n\nUtils.exportLayerWithFormats = function(layer, exportPath, exportName, formats, preserveFrameSize, applyTransformAndOpacity) {\n    let topInset = 0;\n    let bottomInset = 0;\n    let leftInset = 0;\n    let rightInset = 0;\n\n    if (!layer || !exportPath)\n    {\n        console.warn(\"Utils.exportLayerWithFormats: layer or exportPath is not defined\");\n        return [topInset, bottomInset, leftInset, rightInset];\n    }\n\n    if (formats.length > 0) \n    {\n        let sketchDom = require('sketch/dom');\n        let document = sketchDom.getSelectedDocument();\n        let layerToExport = layer;\n\n        if (!exportName)\n            exportName = layer.name;\n\n        if (!exportPath.endsWith(\"/\"))\n            exportPath += \"/\";\n\n        // Duplicate our layer if needed\n        let useDuplicate = false;\n        let isRotated = (layer.transform.rotation != 0);\n        let isFlippedHorizontally = layer.transform.flippedHorizontally;\n        let isFlippedVertically = layer.transform.flippedVertically;\n        let parentIsGroup = (layer.parent && layer.parent.sketchObject && layer.parent.sketchObject.isKindOfClass(MSLayerGroup.class()));\n        if (\n            !applyTransformAndOpacity \n            && \n            ((layer.style.opacity != 1) || isRotated || isFlippedHorizontally || layer.transform.flippedVertically || parentIsGroup)\n            )\n        {\n            useDuplicate = true;\n            layerToExport = layer.duplicate();\n            layerToExport.parent = document.selectedPage;\n\n            layerToExport.style.opacity = 1;\n            \n             if (isFlippedHorizontally)\n                layerToExport.transform.flippedHorizontally = false;\n \n             if (isFlippedVertically)\n                 layerToExport.transform.flippedVertically = false;\n \n            if (isRotated) {\n                if (Utils.isLine(layer)) {\n                    // Special case: Sketch updates the points of a line when we set its rotation\n                    // Rotation = 0 => horizontal line\n                   let frame = layerToExport.frame;\n                   let point0 = layerToExport.points[0];\n                   let pt0X = point0.point.x * frame.width;\n                   let pt0Y = point0.point.y * frame.height;\n                   let point1 = layerToExport.points[1];\n                   let pt1X = point1.point.x * frame.width;\n                   let pt1Y = point1.point.y * frame.height;\n                   let angleInDegrees = Math.atan2(pt1Y - pt0Y, pt1X - pt0X) * 180 / Math.PI;\n\n                   layerToExport.transform.rotation = angleInDegrees;\n                } else {\n                    layerToExport.transform.rotation = 0;\n                }\n            }\n        }\n\n        let nativeLayer = layerToExport.sketchObject;\n        let absoluteRect = nativeLayer.absoluteRect().rect();\n        let absoluteInfluenceRect = nativeLayer.absoluteInfluenceRect();\n\n        let exportRect = absoluteRect;\n        if (!preserveFrameSize && !CGRectContainsRect(absoluteRect, absoluteInfluenceRect))\n        {\n            //TODO: decide if it's better to use the influence rectangle OR to use the union of both rectangles\n            //     - influence rectangle: we export the smallest possible image BUT we can have rather high inset values\n            //     - union: we can have small inset values BUT we export a larger image\n            //exportRect = CGRectUnion(absoluteRect, absoluteInfluenceRect); \n            exportRect = absoluteInfluenceRect;\n\n            let absoluteRectX = Utils.roundBy(absoluteRect.origin.x, 0.5);\n            let absoluteRectY = Utils.roundBy(absoluteRect.origin.y, 0.5);\n            let absoluteRectWidth = Math.ceil(absoluteRect.size.width);\n            let absoluteRectHeight = Math.ceil(absoluteRect.size.height);\n\n            topInset = exportRect.origin.y - absoluteRectY;\n            bottomInset = (absoluteRectY + absoluteRectHeight) - (exportRect.origin.y + exportRect.size.height);\n            leftInset = exportRect.origin.x - absoluteRectX;\n            rightInset = (absoluteRectX + absoluteRectWidth) - (exportRect.origin.x + exportRect.size.width);\n\n//         log(\"Utils.exportLayerWithFormats: we don't use the frame size of our layer, we will use insets to extend the visual size of our layer. Layer=\" + layer.name + \", top=\" + topInset + \", bottom=\" + bottomInset + \", left=\" + leftInset + \", right=\" + rightInset);\n        }\n//      else log(\"Utils.exportLayerWithFormats: we use the frame size of our layer to avoid trimming of transparent pixels. Layer=\" + layer.name);\n\n        //log(\"Export \" + exportName + \" rect \" + exportRect.origin.x + \", \" + exportRect.origin.y + \", \" + exportRect.size.width + \", \" + exportRect.size.height)\n        //log(\" => insets top=\" + topInset + \", bottom=\" + bottomInset + \" -- left=\" + leftInset + \", right=\" + rightInset)\n     \n        const sketchVersion = require('sketch/dom').version.sketch;\n        if (sketchVersion >= 79) {\n            // Version 79 of Sketch-Headers does not contain\n            // -(id)exportRequestFromExportFormat:(id)arg1 layer:(id)arg2 inRect:(struct CGRect)arg3 useIDForName:(BOOL)arg4;\n            formats.forEach(format => {\n                let exportFormat = (format.sketchObject ? format.sketchObject : format);\n                let exportRequest = MSExportRequest.exportRequestsFromExportableLayer_exportFormats_inRect_useIDForName(nativeLayer, [exportFormat], exportRect, false).firstObject();\n                exportRequest.setShouldTrim(false);\n                document.sketchObject.saveArtboardOrSlice_toFile(exportRequest, exportPath + MSExportFormat.exportableFilenameForLayerName_exportFormat(exportName, exportFormat));\n            });\n        } else {\n            formats.forEach(format => {\n                let exportFormat = (format.sketchObject ? format.sketchObject : format);\n                let exportRequest = MSExportRequest.exportRequestFromExportFormat_layer_inRect_useIDForName(exportFormat, nativeLayer, exportRect, false);\n                exportRequest.setShouldTrim(false);\n                document.sketchObject.saveArtboardOrSlice_toFile(exportRequest, exportPath + MSExportFormat.exportableFilenameForLayerName_exportFormat(exportName, exportFormat));\n            });\n        }\n\n        if (useDuplicate)\n        {\n            layerToExport.remove();\n        }\n    }\n    else\n    {\n        console.warn(\"Utils.exportLayerWithFormats: no export format to export layer \" + layer.name);\n    }\n\n    return [topInset, bottomInset, leftInset, rightInset];\n}\n\n\n\nUtils.exportLayerAsPNG = function(layer, maxAtN, exportPath, exportName, preserveFrameSize, applyTransformAndOpacity) {\n    if (!layer || !exportPath)\n    {\n        console.warn(\"Utils.exportLayerAsPNG: layer or exportPath is not defined\");\n        return [0, 0, 0, 0];\n    }\n\n    maxAtN = Math.max(1, maxAtN);\n\n    let exportFormats = [];\n    for (let index = 1; index <= maxAtN; index++) \n    {\n        let pngFormat = MSExportFormat.alloc().init();\n        pngFormat.setFileFormat(\"png\");\n        pngFormat.setScale(index);\n        pngFormat.setName((index === 1) ? \"\" : \"@\" + index + \"x\");\n        \n        exportFormats.push(pngFormat);\n    }\n\n    return Utils.exportLayerWithFormats(layer, exportPath, exportName, exportFormats, preserveFrameSize, applyTransformAndOpacity);\n};\n\n\nUtils.exportLayerAsSVG = function(layer, exportPath, exportName, preserveFrameSize, applyTransformAndOpacity) {\n    if (!layer || !exportPath)\n    {\n        console.warn(\"Utils.exportLayerAsSVG: layer or exportPath is not defined\");\n        return [0, 0, 0, 0];\n    }\n\n    let svgFormat = MSExportFormat.alloc().init();\n    svgFormat.setFileFormat(\"svg\");\n    svgFormat.setScale(1);\n\n    return Utils.exportLayerWithFormats(layer, exportPath, exportName, [svgFormat], preserveFrameSize, applyTransformAndOpacity);\n};\n\n\nUtils.exportLayerWithUserDefinedExportOptions = function(layer, exportPath, exportName, preserveFrameSize, applyTransformAndOpacity) {\n    if (!layer || !exportPath)\n    {\n        console.warn(\"Utils.exportLayerWithUserDefinedExportOptions: layer or exportPath is not defined\");\n        return [0, 0, 0, 0];\n    }\n\n    return Utils.exportLayerWithFormats(layer, exportPath, exportName, layer.exportFormats, preserveFrameSize, applyTransformAndOpacity);\n};\n\n\n\nmodule.exports = Utils;\n","\nfunction xmlAddElement(parent, name, attributes, value){\n    if (parent == null){\n        log (\"parent is null for \" + name);\n        return null;\n    }\n    var el;\n    if (value != null){\n        el = NSXMLElement.elementWithName_stringValue(NSString.stringWithFormat(\"%@\", name),\n                                                      NSString.stringWithFormat(\"%@\", value));\n    }else{\n        el = NSXMLElement.elementWithName(NSString.stringWithFormat(\"%@\", name));\n    }\n    \n    for (var i = 0; attributes && (i < attributes.length); i+=2){\n        el.addAttribute(NSXMLNode.attributeWithName_stringValue(NSString.stringWithFormat(\"%@\", attributes[i]),NSString.stringWithFormat(\"%@\", attributes[i+1])));\n    }\n    parent.addChild(el);\n    return el;\n}\n\nfunction xmlAddAttributesToElement(element, keyValues){\n    if (element == null){\n        log (\"xmlAddAttributesToElement: element is null\");\n        return null;\n    }\n    for (var i = 0; keyValues && (i < keyValues.length); i+=2){\n        element.addAttribute(NSXMLNode.attributeWithName_stringValue(NSString.stringWithFormat(\"%@\", keyValues[i]), NSString.stringWithFormat(\"%@\", keyValues[i+1])));\n    }\n}\n\nfunction xmlAddCustomPropertiesToElement(xmlElement, keyValues) {\n    while (keyValues.length > 0) {\n       xmlAddElement(xmlElement, \"property\", [\"key\", keyValues.shift().trim(), \"value\", keyValues.shift().trim()], null);\n    }\n}\n\nfunction exportXMLToPath(path, root){\n    var doc = NSXMLDocument.documentWithRootElement(root);\n    var xmlData = doc.XMLDataWithOptions(NSXMLNodePrettyPrint);\n    const p = NSString.stringWithFormat(\"%@\", path).stringByExpandingTildeInPath();\n    xmlData.writeToFile(p);\n}\n\nmodule.exports = {xmlAddElement, xmlAddAttributesToElement, xmlAddCustomPropertiesToElement, exportXMLToPath};","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/settings\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}